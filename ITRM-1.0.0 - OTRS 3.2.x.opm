<?xml version="1.0" encoding="utf-8" ?>
<otrs_package version="1.1">
    <Name>ITRM</Name>
    <Version>1.0.0</Version>
    <Vendor>OPGK Rzeszów S.A.</Vendor>
    <URL>http://opgk.rzeszow.pl/</URL>
    <License>GNU GENERAL PUBLIC LICENSE Version 2, June 1991</License>
    <ChangeLog Date="2013-06-14 15:00:00" Version="1.0.0">First release.</ChangeLog>
    <Description Lang="en">ITRM - IT Resource Management Module.</Description>
    <Description Lang="pl">Moduł ITRM - Zarządzanie zasobami IT.</Description>
    <Framework>3.2.x</Framework>
    <IntroInstall Lang="en" Title="Thank you!" Type="post">Thank you for choosing the ITRM module.</IntroInstall>
    <IntroInstall Lang="pl" Title="Dziękujemy!" Type="post">Dziękujemy za wybór modułu ITRM.</IntroInstall>
    <CodeInstall Type="post">
		
		$Self-&gt;{DBObject}-&gt;Do(SQL =&gt; &quot;CREATE TABLE itrm_okres (
		  id INTEGER(11) NOT NULL AUTO_INCREMENT,
		  id_cyklu INTEGER(11) NOT NULL,
		  od DATE DEFAULT NULL,
		  do DATE DEFAULT NULL,
		  kolejnosc INTEGER(11) DEFAULT NULL,
		  PRIMARY KEY USING BTREE (id),
		  UNIQUE INDEX id USING BTREE (id),
		   INDEX id_cyklu USING BTREE (id_cyklu)
		)ENGINE=MyISAM
		AUTO_INCREMENT=80 AVG_ROW_LENGTH=210 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci'
		COMMENT=''&quot;);
	
		# dodanie dynamic field zasoby
		$Self-&gt;{DBObject}-&gt;Do(SQL =&gt; &quot;INSERT INTO dynamic_field (internal_field, name, label, field_order, field_type, object_type, config, valid_id, create_time, create_by, change_time, change_by) VALUES (0,'Zasoby','Needed resources',3,'Text','Ticket',0x2D2D2D0A44656661756C7456616C75653A2027270A4C696E6B3A2027270A,1,'2013-06-04 13:08:26',1,'2013-06-04 15:04:26',1)&quot;);
	</CodeInstall>
    <CodeUninstall Type="post">
		#usuwanie wartosci dynamic field zasoby dla ticketow
		my $id_zasobow;
		my $IDZasobyDynamicField = $Self-&gt;{DBObject}-&gt;SelectAll(
				SQL    =&gt; 	&quot;SELECT id FROM dynamic_field WHERE name = 'Zasoby'&quot;,
			);
		for my $ID ( @$IDZasobyDynamicField ) {
				$id_zasobow = @$ID[0];
		}
		$Self-&gt;{DBObject}-&gt;Do(
			SQL  =&gt; &quot;DELETE FROM dynamic_field_value WHERE field_id = &quot;.$id_zasobow,
		);
		
		#usuwanie dynamic field zasobny
		$Self-&gt;{DBObject}-&gt;Do(SQL =&gt; &quot;DELETE FROM dynamic_field WHERE name = 'Zasoby'&quot;);
	</CodeUninstall>
    <BuildDate>2014-04-07 16:31:06</BuildDate>
    <BuildHost>development-host</BuildHost>
    <Filelist>
        <File Location="Kernel/Config/Files/ITRM.xml" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/System/Queue.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AdminInitITRM.pm" Permission="644" Encode="Base64">IyAtLQ0KIyBLZXJuZWwvTW9kdWxlcy9BZG1pbkluaXRJVFJNLnBtIC0gaW5pdCBhIG5ldyBzZXR1cA0KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMCBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvDQojIC0tDQojICRJZDogQWRtaW5Jbml0SVRSTS5wbSx2IDEuMTcgMjAxMC8wOS8wMiAxMjoyMDo0NyBtYXJ0aW4gRXhwICQNCiMgLS0NCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQ0KIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0Lg0KIyAtLQ0KDQpwYWNrYWdlIEtlcm5lbDo6TW9kdWxlczo6QWRtaW5Jbml0SVRSTTsNCg0KdXNlIHN0cmljdDsNCnVzZSB3YXJuaW5nczsNCg0KdXNlIEtlcm5lbDo6U3lzdGVtOjpTeXNDb25maWc7DQoNCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsNCiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjE3ICQpIFsxXTsNCg0Kc3ViIG5ldyB7DQogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsNCg0KICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdA0KICAgIG15ICRTZWxmID0geyVQYXJhbX07DQogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOw0KDQogICAgIyBjaGVjayBhbGwgbmVlZGVkIG9iamVjdHMNCiAgICBmb3IgKHF3KFBhcmFtT2JqZWN0IERCT2JqZWN0IExheW91dE9iamVjdCBDb25maWdPYmplY3QgTG9nT2JqZWN0KSkgew0KICAgICAgICBpZiAoICEkU2VsZi0+eyRffSApIHsNCiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+RmF0YWxFcnJvciggTWVzc2FnZSA9PiAiR290IG5vICRfISIgKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICRTZWxmLT57U3lzQ29uZmlnT2JqZWN0fSA9IEtlcm5lbDo6U3lzdGVtOjpTeXNDb25maWctPm5ldyglUGFyYW0pOw0KDQogICAgcmV0dXJuICRTZWxmOw0KfQ0KDQpzdWIgUnVuIHsNCiAgICBteSAoICRTZWxmLCAlUGFyYW0gKSA9IEBfOw0KDQogICAgIyByZXR1cm4gZG8gYWRtaW4gc2NyZWVuDQogICAgaWYgKCAkU2VsZi0+e1N1YmFjdGlvbn0gZXEgJ0RvbmUnICkgew0KICAgICAgICByZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5SZWRpcmVjdCggT1AgPT4gJ0FjdGlvbj1BZG1pbklUUk0nICk7DQogICAgfQ0KDQogICAgIyB3cml0ZSBkZWZhdWx0IGZpbGUNCiAgICBpZiAoICEkU2VsZi0+e1N5c0NvbmZpZ09iamVjdH0tPldyaXRlRGVmYXVsdCgpICkgew0KICAgICAgICByZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5FcnJvclNjcmVlbigpOw0KICAgIH0NCg0KICAgICMgY3JlYXRlIGNvbmZpZyBvYmplY3QNCiAgICAkU2VsZi0+e0NvbmZpZ09iamVjdH0gPSBLZXJuZWw6OkNvbmZpZy0+bmV3KCAleyRTZWxmfSApOw0KDQogICAgIyBpbnN0YWxsIGluY2x1ZGVkIHBhY2thZ2VzDQogICAgaWYgKCAkU2VsZi0+e01haW5PYmplY3R9LT5SZXF1aXJlKCdLZXJuZWw6OlN5c3RlbTo6UGFja2FnZScpICkgew0KICAgICAgICBteSAkUGFja2FnZU9iamVjdCA9IEtlcm5lbDo6U3lzdGVtOjpQYWNrYWdlLT5uZXcoICV7JFNlbGZ9ICk7DQogICAgICAgIGlmICgkUGFja2FnZU9iamVjdCkgew0KICAgICAgICAgICAgJFBhY2thZ2VPYmplY3QtPlBhY2thZ2VJbnN0YWxsRGVmYXVsdEZpbGVzKCk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICByZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5SZWRpcmVjdCggT1AgPT4gJ1N1YmFjdGlvbj1Eb25lJyApOw0KfQ0KDQoxOw0K</File>
        <File Location="Kernel/Modules/AdminITRM.pm" Permission="644" Encode="Base64">IyAtLQ0KIyBLZXJuZWwvTW9kdWxlcy9BZG1pbklUUk0ucG0gLSBwcm92aWRlcyBBZG1pbklUUk0gbWFpbiBwYWdlDQojIENvcHlyaWdodCAoQykgMjAwMS0yMDA5IE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8NCiMgLS0NCiMgJElkOiBBZG1pbklUUk0ucG0sdiAxLjE4IDIwMDkvMDIvMTYgMTE6MjA6NTIgdHIgRXhwICQNCiMgLS0NCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQ0KIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0Lg0KIyAtLQ0KDQpwYWNrYWdlIEtlcm5lbDo6TW9kdWxlczo6QWRtaW5JVFJNOw0KDQp1c2Ugc3RyaWN0Ow0KdXNlIHdhcm5pbmdzOw0KDQp1c2UgdmFycyBxdygkVkVSU0lPTik7DQokVkVSU0lPTiA9IHF3KCRSZXZpc2lvbjogMS4xOCAkKSBbMV07DQoNCnN1YiBuZXcgew0KICAgIG15ICggJFR5cGUsICVQYXJhbSApID0gQF87DQoNCiAgICAjIGFsbG9jYXRlIG5ldyBoYXNoIGZvciBvYmplY3QNCiAgICBteSAkU2VsZiA9IHslUGFyYW19Ow0KICAgIGJsZXNzKCAkU2VsZiwgJFR5cGUgKTsNCg0KICAgICMgY2hlY2sgbmVlZGVkIG9iamVjdHMNCiAgICBmb3IgKHF3KFBhcmFtT2JqZWN0IERCT2JqZWN0IExheW91dE9iamVjdCBMb2dPYmplY3QgQ29uZmlnT2JqZWN0KSkgew0KICAgICAgICBpZiAoICEkU2VsZi0+eyRffSApIHsNCiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+RmF0YWxFcnJvciggTWVzc2FnZSA9PiAiR290IG5vICRfISIgKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiAkU2VsZjsNCn0NCg0Kc3ViIFJ1biB7DQogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsNCg0KICAgICMgYnVpbGQgb3V0cHV0DQogICAgbXkgJE91dHB1dCA9ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+SGVhZGVyKCk7DQogICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk5hdmlnYXRpb25CYXIoKTsNCiAgICAkT3V0cHV0IC49ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+Rm9vdGVyKCk7DQoNCiAgICByZXR1cm4gJE91dHB1dDsNCn0NCg0KMTsNCg==</File>
        <File Location="Kernel/Modules/AgentTicketZasoby.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9Nb2R1bGVzL0FnZW50VGlja2V0Q2xvc2UucG0gLSBjbG9zZSBhIHRpY2tldAojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpNb2R1bGVzOjpBZ2VudFRpY2tldFphc29ieTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnVzZSBiYXNlIHF3KCBLZXJuZWw6Ok1vZHVsZXM6OkFnZW50VGlja2V0QWN0aW9uQ29tbW9uICk7CgoxOwo=</File>
        <File Location="Kernel/Modules/KolejkiZasoby.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/ItrmZdarzenia.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/UzytkownicyDoKolejki.pm" Permission="644" Encode="Base64">IyAtLQ0KIyBLZXJuZWwvTW9kdWxlcy9Lb2xlamtpWmFzb2J5LnBtIC0gdG8gYWRkL3VwZGF0ZS9kZWxldGUgcXVldWVzDQojIENvcHlyaWdodCAoQykgMjAwMS0yMDExIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8NCiMgLS0NCiMgJElkOiBLb2xlamtpWmFzb2J5LnBtLHYgMS44MiAyMDExLzA5LzA4IDIwOjUxOjMzIGVuIEV4cCAkDQojIC0tDQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlDQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UNCiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4NCiMgLS0NCg0KcGFja2FnZSBLZXJuZWw6Ok1vZHVsZXM6OlV6eXRrb3duaWN5RG9Lb2xlamtpOw0KDQp1c2Ugc3RyaWN0Ow0KdXNlIHdhcm5pbmdzOw0KDQp1c2UgS2VybmVsOjpTeXN0ZW06OkNyeXB0Ow0KdXNlIEtlcm5lbDo6U3lzdGVtOjpWYWxpZDsNCnVzZSBLZXJuZWw6OlN5c3RlbTo6U2FsdXRhdGlvbjsNCnVzZSBLZXJuZWw6OlN5c3RlbTo6U2lnbmF0dXJlOw0KdXNlIEtlcm5lbDo6U3lzdGVtOjpTeXN0ZW1BZGRyZXNzOw0KDQojIGRhbWlhbnMgIw0KdXNlIEtlcm5lbDo6U3lzdGVtOjpEeW5hbWljRmllbGQ7DQp1c2UgS2VybmVsOjpTeXN0ZW06OkR5bmFtaWNGaWVsZFZhbHVlOw0KdXNlIEtlcm5lbDo6U3lzdGVtOjpVc2VyOw0KdXNlIEtlcm5lbDo6TW9kdWxlczo6S29sZWpraVphc29ieTsNCg0KdXNlIERhdGE6OkR1bXBlcjsNCg0KIyBkYW1pYW5zICMNCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsNCiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjgyICQpIFsxXTsNCg0Kc3ViIG5ldyB7DQogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsNCg0KICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdA0KICAgIG15ICRTZWxmID0geyVQYXJhbX07DQogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOw0KDQogICAgIyBjaGVjayBhbGwgbmVlZGVkIG9iamVjdHMNCiAgICBmb3IgbXkgJE5lZWRlZCAoDQogICAgICAgIHF3KFBhcmFtT2JqZWN0IERCT2JqZWN0IFF1ZXVlT2JqZWN0IExheW91dE9iamVjdCBDb25maWdPYmplY3QgTG9nT2JqZWN0IE1haW5PYmplY3QgRW5jb2RlT2JqZWN0KQ0KICAgICAgICApDQogICAgew0KICAgICAgICBpZiAoICEkU2VsZi0+eyROZWVkZWR9ICkgew0KICAgICAgICAgICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5GYXRhbEVycm9yKCBNZXNzYWdlID0+ICJHb3Qgbm8gJE5lZWRlZCEiICk7DQogICAgICAgIH0NCiAgICB9DQogICAgJFNlbGYtPntWYWxpZE9iamVjdH0gICAgICAgICA9IEtlcm5lbDo6U3lzdGVtOjpWYWxpZC0+bmV3KCVQYXJhbSk7DQogICAgJFNlbGYtPntTYWx1dGF0aW9uT2JqZWN0fSAgICA9IEtlcm5lbDo6U3lzdGVtOjpTYWx1dGF0aW9uLT5uZXcoJVBhcmFtKTsNCiAgICAkU2VsZi0+e1NpZ25hdHVyZU9iamVjdH0gICAgID0gS2VybmVsOjpTeXN0ZW06OlNpZ25hdHVyZS0+bmV3KCVQYXJhbSk7DQogICAgJFNlbGYtPntTeXN0ZW1BZGRyZXNzT2JqZWN0fSA9IEtlcm5lbDo6U3lzdGVtOjpTeXN0ZW1BZGRyZXNzLT5uZXcoJVBhcmFtKTsNCiAgICAkU2VsZi0+e0dyb3VwT2JqZWN0fSAgICAgICAgID0gS2VybmVsOjpTeXN0ZW06Okdyb3VwLT5uZXcoJVBhcmFtKTsNCg0KCSMgZGFtaWFucyAjDQogICAgJFNlbGYtPntEeW5hbWljRmllbGRWYWx1ZU9iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6RHluYW1pY0ZpZWxkVmFsdWUtPm5ldyglUGFyYW0pOw0KICAgICRTZWxmLT57RHluYW1pY0ZpZWxkT2JqZWN0fSA9IEtlcm5lbDo6U3lzdGVtOjpEeW5hbWljRmllbGQtPm5ldyglUGFyYW0pOw0KICAgICRTZWxmLT57VXNlck9iamVjdH0gPSBLZXJuZWw6OlN5c3RlbTo6VXNlci0+bmV3KCVQYXJhbSk7DQogICAgJFNlbGYtPntLb2xlamtpWmFzb2J5fSA9IEtlcm5lbDo6TW9kdWxlczo6S29sZWpraVphc29ieS0+bmV3KCVQYXJhbSk7DQoJIyBkYW1pYW5zICMNCgkNCiAgICByZXR1cm4gJFNlbGY7DQp9DQoNCnN1YiBSdW4gew0KICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87DQoNCiAgICBteSAkVXNlcklEID0gJFNlbGYtPntQYXJhbU9iamVjdH0tPkdldFBhcmFtKCBQYXJhbSA9PiAnVXNlcklEJyApIHx8ICcnOw0KDQoNCiAgICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjDQogICAgIyBjaGFuZ2UNCiAgICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjDQogICAgaWYgKCAkU2VsZi0+e1N1YmFjdGlvbn0gZXEgJ0NoYW5nZScgKSB7DQoJCSRTZWxmLT5fRWRpdCgNCgkJCUFjdGlvbiA9PiAnQ2hhbmdlJywNCgkJCVVzZXJJRCA9PiAkVXNlcklELA0KCQkJJVBhcmFtLA0KCQkpOw0KCQkNCgkJbXkgJE91dHB1dCA9ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+SGVhZGVyKCk7DQogICAgICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5OYXZpZ2F0aW9uQmFyKCk7DQogICAgICAgICRPdXRwdXQgLj0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5PdXRwdXQoDQogICAgICAgICAgICBUZW1wbGF0ZUZpbGUgPT4gJ1V6eXRrb3duaWN5S29sZWpraScsDQogICAgICAgICAgICBEYXRhICAgICAgICAgPT4gXCVQYXJhbSwNCiAgICAgICAgKTsNCiAgICAgICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPkZvb3RlcigpOw0KCQkJCQ0KICAgICAgICByZXR1cm4gJE91dHB1dDsNCgkJDQogICAgfSANCgkjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjDQogICAgIyBBZGRPa3Jlcw0KICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMNCgllbHNpZiAoICRTZWxmLT57U3ViYWN0aW9ufSBlcSAnU2F2ZScgKSB7IA0KCQkkU2VsZi0+X0VkaXQoDQoJCQlBY3Rpb24gPT4gJ1NhdmUnLA0KCQkJVXNlcklEID0+ICRVc2VySUQsDQoJCQklUGFyYW0sDQoJCSk7DQoJCQ0KCQlteSAkcmVkaXJlY3RfbGluayA9J0FjdGlvbj1Venl0a293bmljeURvS29sZWpraTtTdWJhY3Rpb249Q2hhbmdlO1VzZXJJRD0nLiRVc2VySUQ7DQoJCQ0KCQlyZXR1cm4gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5SZWRpcmVjdCggT1AgPT4gJHJlZGlyZWN0X2xpbmssICk7DQoJfQ0KICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICMNCiAgICAjIG92ZXJ2aWV3DQogICAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIw0KICAgIGVsc2Ugew0KICAgICAgICAkU2VsZi0+X092ZXJ2aWV3KCk7DQoJCQ0KICAgICAgICBteSAkT3V0cHV0ID0gJFNlbGYtPntMYXlvdXRPYmplY3R9LT5IZWFkZXIoKTsNCiAgICAgICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk5hdmlnYXRpb25CYXIoKTsNCiAgICAgICAgJE91dHB1dCAuPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk91dHB1dCgNCiAgICAgICAgICAgIFRlbXBsYXRlRmlsZSA9PiAnVXp5dGtvd25pY3lLb2xlamtpJywNCiAgICAgICAgICAgIERhdGEgICAgICAgICA9PiBcJVBhcmFtLA0KICAgICAgICApOw0KICAgICAgICAkT3V0cHV0IC49ICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+Rm9vdGVyKCk7DQoJCQ0KICAgICAgICByZXR1cm4gJE91dHB1dDsNCiAgICB9DQp9DQoNCnN1YiBfRWRpdCB7DQoJbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsNCgkNCgkkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKA0KICAgICAgICBOYW1lID0+ICdPdmVydmlldycsDQogICAgICAgIERhdGEgPT4gXCVQYXJhbSwNCiAgICApOw0KCQ0KICAgICR7U2VsZn0tPntMYXlvdXRPYmplY3R9LT5CbG9jayggTmFtZSA9PiAnQWN0aW9uTGlzdCcgKTsNCiAgICAke1NlbGZ9LT57TGF5b3V0T2JqZWN0fS0+QmxvY2soIE5hbWUgPT4gJ0FjdGlvbkFkZCcgKTsNCgkNCglteSAlVXNlckRhdGEgPSAkU2VsZi0+e1VzZXJPYmplY3R9LT5HZXRVc2VyRGF0YSgNCiAgICAgICAgVXNlcklEID0+ICRQYXJhbXtVc2VySUR9LA0KICAgICk7DQoJDQoJJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygNCiAgICAgICAgTmFtZSA9PiAnVXNlck92ZXJ2aWV3UmVzdWx0JywNCiAgICAgICAgRGF0YSA9PiB7DQoJCQklUGFyYW0sDQoJCQklVXNlckRhdGEsDQogICAgICAgIH0sDQogICAgKTsJDQoJDQoJaWYgKCAkUGFyYW17QWN0aW9ufSBlcSAnQ2hhbmdlJyApIHsNCgkJbXkgJUxpc3QgPSAkU2VsZi0+e1F1ZXVlT2JqZWN0fS0+R2V0QWxsUXVldWVzKCBVc2VySUQgPT4gJFBhcmFte1VzZXJJRH0sIFR5cGUgPT4gJ3J3JyApOw0KCQlpZiAoJUxpc3QpIHsNCgkJCW15ICR6YXNvYnkgPSAkU2VsZi0+e0RCT2JqZWN0fS0+U2VsZWN0QWxsKA0KCQkJCQlTUUwgICAgPT4gIlNFTEVDVCB6YXNvYnkgRlJPTSBpdHJtX3V6eXRrb3duaWtfa29sZWprYSBXSEVSRSBvc29iYSA9ICIuJFBhcmFte1VzZXJJRH0uIiIsDQoJCQkJKTsNCgkJCW15ICRzdW1hX3phc29ib3cgPSAwOw0KCQkJZm9yIG15ICRSb3czICggQCR6YXNvYnkgKSB7DQoJCQkJJHN1bWFfemFzb2JvdyArPSBAJFJvdzNbMF07CQkJCQkNCgkJCX0NCgkJCSRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soDQoJCQkJTmFtZSA9PiAnVXNlck92ZXJ2aWV3Rm9ybScsDQoJCQkJRGF0YSA9PiB7DQoJCQkJCSVQYXJhbSwNCgkJCQkJU3VtYVphc29ib3cgPT4gJHN1bWFfemFzb2JvdywNCgkJCQl9DQoJCQkpOw0KCQkJCQ0KCQkJIyBnZXQgdmFsaWQgbGlzdA0KCQkJbXkgJVZhbGlkTGlzdCA9ICRTZWxmLT57VmFsaWRPYmplY3R9LT5WYWxpZExpc3QoKTsNCgkJCWZvciBteSAkUXVldWVJRCAoIHNvcnQgeyAkTGlzdHskYX0gY21wICRMaXN0eyRifSB9IGtleXMgJUxpc3QgKSB7DQoJCQkJbXkgJURhdGEgPSAkU2VsZi0+e1F1ZXVlT2JqZWN0fS0+UXVldWVHZXQoIElEID0+ICRRdWV1ZUlELCApOw0KCQkJCQ0KCQkJCW15ICR6YXNvYnkgPSAkU2VsZi0+e0RCT2JqZWN0fS0+U2VsZWN0QWxsKA0KCQkJCQlTUUwgICAgPT4gIlNFTEVDVCB6YXNvYnkgRlJPTSBpdHJtX3V6eXRrb3duaWtfa29sZWprYSBXSEVSRSBrb2xlamthID0gIi4kUXVldWVJRC4iIEFORCBvc29iYSA9ICIuJFBhcmFte1VzZXJJRH0uIiIsDQoJCQkJKTsNCgkJCQlteSAkcHJ6eXBpc2FuZV96YXNvYnkgPSAwOw0KCQkJCWZvciBteSAkUm93MyAoIEAkemFzb2J5ICkgew0KCQkJCQkkcHJ6eXBpc2FuZV96YXNvYnkgPSBAJFJvdzNbMF07CQkJCQkNCgkJCQl9DQoJCQkJDQoJCQkJJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygNCgkJCQkJTmFtZSA9PiAnVXNlck92ZXJ2aWV3UmVzdWx0Um93JywNCgkJCQkJRGF0YSA9PiB7DQoJCQkJCQlWYWxpZCA9PiAkVmFsaWRMaXN0eyAkRGF0YXtWYWxpZElEfSB9LA0KCQkJCQkJJURhdGEsDQoJCQkJCQlQcnp5ZHppZWxvbmVaYXNvYnkgPT4gJHByenlwaXNhbmVfemFzb2J5LA0KCQkJCQl9LA0KCQkJCSk7DQoJCQkJDQoJCQl9DQoJCX0NCgkJZWxzZSB7DQoJCQkkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKA0KCQkJCU5hbWUgPT4gJ1VzZXJPdmVydmlld05vRGF0YUZvdW5kTXNnJywNCgkJCQlEYXRhID0+IHt9LA0KCQkJKTsNCgkJfQkNCgl9IGVsc2lmICggJFBhcmFte0FjdGlvbn0gZXEgJ1NhdmUnICkgeyANCgkJbXkgJUxpc3QgPSAkU2VsZi0+e1F1ZXVlT2JqZWN0fS0+R2V0QWxsUXVldWVzKCBVc2VySUQgPT4gJFBhcmFte1VzZXJJRH0sIFR5cGUgPT4gJ3J3JyApOw0KCQlteSBAa2V5cyA9IGtleXMgJUxpc3Q7DQoJCWZvcmVhY2ggKEBrZXlzKSB7DQoJCQlteSAkaWRfa29sZWpraSA9ICRfOw0KCQkJbXkgJHByenlwaXNhbmVfemFzb2J5ID0gJFNlbGYtPntQYXJhbU9iamVjdH0tPkdldFBhcmFtKCBQYXJhbSA9PiAncHJvY2VudHlfJy4kaWRfa29sZWpraS4nJyApOw0KDQoJCQkkU2VsZi0+e0RCT2JqZWN0fS0+UHJlcGFyZSgNCgkJCQlTUUwgICAgPT4gIlNFTEVDVCBvc29iYSBGUk9NIGl0cm1fdXp5dGtvd25pa19rb2xlamthIFdIRVJFIGtvbGVqa2EgPSAiLiRpZF9rb2xlamtpLiIgQU5EIG9zb2JhID0iLiRQYXJhbXtVc2VySUR9LA0KCQkJKTsNCgkJCW15ICRpc191c3Rhd2lvbmEgPSAwOw0KCQkJd2hpbGUgKG15IEBSb3cgPSAkU2VsZi0+e0RCT2JqZWN0fS0+RmV0Y2hyb3dBcnJheSgpKSB7DQoJCQkJJGlzX3VzdGF3aW9uYSsrOw0KCQkJfQ0KCQkJDQoJCQlpZigkaXNfdXN0YXdpb25hKXsNCgkJCQkkU2VsZi0+e0RCT2JqZWN0fS0+RG8oDQoJCQkJCVNRTCAgPT4gIlVQREFURSBpdHJtX3V6eXRrb3duaWtfa29sZWprYSBTRVQgemFzb2J5ID0gPyBXSEVSRSBrb2xlamthID0gPyBBTkQgb3NvYmEgPSA/IiwNCgkJCQkJQmluZCA9PiBbIFwkcHJ6eXBpc2FuZV96YXNvYnksXCRpZF9rb2xlamtpLFwkUGFyYW17VXNlcklEfSBdLA0KCQkJCSk7DQoJCQl9IGVsc2Ugew0KCQkJCSRTZWxmLT57REJPYmplY3R9LT5EbygNCgkJCQkJU1FMICA9PiAiSU5TRVJUIElOVE8gaXRybV91enl0a293bmlrX2tvbGVqa2EgKG9zb2JhLCBrb2xlamthLCB6YXNvYnkpIFZBTFVFUyAoPywgPywgPykiLA0KCQkJCQlCaW5kID0+IFsgXCRQYXJhbXtVc2VySUR9LCBcJGlkX2tvbGVqa2ksIFwkcHJ6eXBpc2FuZV96YXNvYnkgXSwNCgkJCQkpOw0KCQkJfQ0KCQkJJFNlbGYtPntLb2xlamtpWmFzb2J5fS0+X1VwZGF0ZVJlc291cmNlcygNCgkJCQlRdWV1ZUlEID0+ICRpZF9rb2xlamtpDQoJCQkpOw0KCQkJDQoJCX0NCgkJJFNlbGYtPntMYXlvdXRPYmplY3R9LT5Ob3RpZnkoIEluZm8gPT4gJ1phc29ieSB6b3N0YbN5IHByemVsaWN6b25lIGRsYSB3c3p5c3RraWNoIGtvbGVqZWssIGRvIGt083J5Y2ggdGVuIGFnZW50IHBvc2lhZGEgZG9zdOpwJyApOw0KCX0NCn0NCg0Kc3ViIF9PdmVydmlldyB7DQogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsNCg0KICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soDQogICAgICAgIE5hbWUgPT4gJ092ZXJ2aWV3JywNCiAgICAgICAgRGF0YSA9PiBcJVBhcmFtLA0KICAgICk7DQogICAgJHtTZWxmfS0+e0xheW91dE9iamVjdH0tPkJsb2NrKCBOYW1lID0+ICdBY3Rpb25MaXN0JyApOw0KICAgICR7U2VsZn0tPntMYXlvdXRPYmplY3R9LT5CbG9jayggTmFtZSA9PiAnQWN0aW9uQWRkJyApOw0KDQogICAgJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygNCiAgICAgICAgTmFtZSA9PiAnT3ZlcnZpZXdSZXN1bHQnLA0KICAgICAgICBEYXRhID0+IFwlUGFyYW0sDQogICAgKTsNCiAgICBteSAlTGlzdCA9ICRTZWxmLT57VXNlck9iamVjdH0tPlVzZXJTZWFyY2goDQogICAgICAgIFNlYXJjaCA9PiAkUGFyYW17U2VhcmNofSAuICcqJywNCiAgICAgICAgI0xpbWl0ICA9PiA0MDAsDQogICAgICAgIFZhbGlkICA9PiAwLA0KICAgICk7DQoJDQoJDQogICAgaWYgKCVMaXN0KSB7DQogICAgICAgICMgZ2V0IHZhbGlkIGxpc3QNCgkJbXkgJVZhbGlkTGlzdCA9ICRTZWxmLT57VmFsaWRPYmplY3R9LT5WYWxpZExpc3QoKTsNCgkJDQogICAgICAgIGZvciBteSAkTGlzdEtleSAoIHNvcnQgeyAkTGlzdHskYX0gY21wICRMaXN0eyRifSB9IGtleXMgJUxpc3QgKSB7DQoJCQlteSAlVXNlckRhdGEgPSAkU2VsZi0+e1VzZXJPYmplY3R9LT5HZXRVc2VyRGF0YSgNCiAgICAgICAgICAgICAgICBVc2VySUQgICAgICAgID0+ICRMaXN0S2V5LA0KICAgICAgICAgICAgKTsNCgkJCQ0KCQkJJFNlbGYtPntMYXlvdXRPYmplY3R9LT5CbG9jaygNCiAgICAgICAgICAgICAgICBOYW1lID0+ICdPdmVydmlld1Jlc3VsdFJvdycsDQogICAgICAgICAgICAgICAgRGF0YSA9PiB7DQogICAgICAgICAgICAgICAgICAgIFZhbGlkICA9PiAkVmFsaWRMaXN0eyAkVXNlckRhdGF7VmFsaWRJRH0gfSwNCiAgICAgICAgICAgICAgICAgICAgU2VhcmNoID0+ICRQYXJhbXtTZWFyY2h9LA0KICAgICAgICAgICAgICAgICAgICAlVXNlckRhdGEsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICk7DQogICAgICAgIH0NCiAgICB9DQogICAgZWxzZSB7DQogICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soDQogICAgICAgICAgICBOYW1lID0+ICdOb0RhdGFGb3VuZE1zZycsDQogICAgICAgICAgICBEYXRhID0+IHt9LA0KICAgICAgICApOw0KICAgIH0NCiAgICByZXR1cm4gMTsNCn0NCg0KMTsNCg==</File>
        <File Location="Kernel/Modules/KolejkowanieTicketow.pm" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Language/pl_ITRMKolejkowanieTicketow.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wbF9JVFJNS29sZWprb3dhbmllVGlja2V0b3cucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6cGxfSVRSTUtvbGVqa293YW5pZVRpY2tldG93OwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamt1aiB0aWNrZXR5J30gICA9ICdLb2xlamtvd2FuaWUgdGlja2V0w7N3JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa2EnfSAgID0gJ05hendhIGtvbGVqa2knOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnQWtjamEnfSAgID0gJ0FrY2phJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20ga29sZWprb3dhbmllJ30gICA9ICdVcnVjaG9tIGtvbGVqa293YW5pZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIG1vZHVsJ30gICA9ICdVcnVjaG9tIElUUk0gZGxhIGtvbGVqa2knOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnVXJ1Y2hvbSBrb2xlamtvd2FuaWUnfSAgID0gJ1VydWNob20ga29sZWprb3dhbmllJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1d5bmlrIGRsYSBrb2xlamtpJ30gICA9ICdXeW5payBkbGEga29sZWpraSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPYmVjbmllIHJlYWxpem93YW5lIHpnbG9zemVuaWEnfSAgID0gJ09iZWNuaWUgcmVhbGl6b3dhbmUgemfFgm9zemVuaWEnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnU3RhdHVzJ30gICA9ICdTdGF0dXMnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmxlY2FqYWN5J30gICA9ICdabGVjYWrEhWN5JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09kcG93aWVkemlhbG55J30gICA9ICdPZHBvd2llZHppYWxueSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQcmlvcnl0ZXQnfSAgID0gJ1ByaW9yeXRldCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSAgID0gJ1phc29ieSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPa3JlcyByZWFsaXphY2ppJ30gICA9ICdPa3JlcyByZWFsaXphY2ppJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzIG9kJ30gICA9ICdPa3JlcyBvZCAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnZG8nfSAgID0gJyBkbyAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IGRvc3RlcG5lIGRsYSBva3Jlc3UnfSAgID0gJ1phc29ieSBkb3N0xJlwbmUgZGxhIG9rcmVzdTogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RpY2tldHkgbmllIGtvbGVqa293YW5lJ30gICA9ICdaZ8WCb3N6ZW5pYSBvY3pla3VqxIVjZSBuYSBrb2xlamtvd2FuaWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFwaXN6IGtvbGVqbm9zYyd9ICAgPSAnWmFwaXN6IGtvbGVqbm/Fm8SHJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0JyYWsgd3lzdGFyY3phamFjZWogbGljemJ5IGdvZHppbid9ICAgPSAnQnJhayB3eXN0YXJjemFqxIVjZWogbGljemJ5IGdvZHppbiBkbyB3eWtvbmFuaWEgdGVnbyB6YWRhbmlhIHcgd3licmFueW0gb2tyZXNpZS4nOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/pl_ITRMKolejkiZasoby.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wbF9JVFJNS29sZWpraVphc29ieS5wbSAtIHByb3ZpZGVzIHh4IEtlcm5lbC9Nb2R1bGVzLyoucG0gbW9kdWxlIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjpwbF9JVFJNS29sZWpraVphc29ieTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUG9sYWN6IGtvbGVqa2kgeiB6YXNvYmFtaSd9ICAgPSAnUG/FgsSFY3oga29sZWpraSB6IHphc29iYW1pLic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtpLVphc29ieSd9ICAgPSAnS29sZWpraSA8LT4gWmFzb2J5JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByenlwaXN6IHphc29ieSd9ICAgPSAnUHJ6eXBpc3ogemFzb2J5IGRvIGtvbGVqZWsnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnVGEga29sZWprYSBuaWUgbWEgcHJ6eXBpc2FuZWdvIGthbGVuZGFyemEnfSAgID0gJ1RhIGtvbGVqa2EgbmllIG1hIHByenlwaXNhbmVnbyBrYWxlbmRhcnphISBQcnp5cGlzeiBrYWxlbmRhcnohJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa293YW5pZSd9ICAgPSAnS29sZWprb3dhbmllIHpnxYJvc3plxYQnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29sZWprb3dhbmllIHRpY2tldG93J30gICA9ICdLb2xlamtvd2FuaWUgemfFgm9zemXFhC4nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnSVRSTSBLb2xlamtvd2FuaWUnfSAgID0gJ1dpZG9rIGtvbGVqa293YW5pYSB6Z8WCb3N6ZcWEJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0gS29sZWprb3dhbmllIG9waXMnfSAgID0gJ1ByemVnbMSFZCB3eW5pa8OzdyBrb2xlamtvd2FuaWEgZGxhIHBvc3pjemVnw7NsbnljaCBrb2xlamVrJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0xpc3RhIGtvbGVqZWsnfSAgID0gJ0xpc3RhIGtvbGVqZWsnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnVXJ1Y2hvbSBtb2R1bCBuYSBrb2xlamNlJ30gICA9ICdVcnVjaG9tIG1vZHXFgic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIG1vZHVsIGRsYSBrb2xlamtpJ30gICA9ICdVcnVjaG9tIG1vZHXFgiBkbGEga29sZWpraSAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnRHppZW4gcG9jemF0a3UnfSAgID0gJ0R6aWXFhCByb3pwb2N6xJljaWEgb2tyZXN1OiAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT2tyZXN5IGRsYSBrb2xlamtpJ30gICA9ICdPa3Jlc3kgZGxhIGtvbGVqa2kgJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvY3phdGVrJ30gICA9ICdQb2N6xIV0ZWsgb2tyZXN1JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbmllYyd9ICAgPSAnS29uaWVjIG9rcmVzdSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEb3N0ZXBuZSB6YXNvYnknfSAgID0gJ0Rvc3TEmXBuZSB6YXNvYnknOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnRG9kYWogb2tyZXMnfSAgID0gJ0RvZGFqIG5vd3kgb2tyZXMnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/pl_ITRMAdminITRM.pm" Permission="644" Encode="Base64">77u/IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wbF9JVFJNQWRtaW5JVFJNLnBtIC0gcHJvdmlkZXMgeHggS2VybmVsL01vZHVsZXMvKi5wbSBtb2R1bGUgbGFuZ3VhZ2UgdHJhbnNsYXRpb24KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMyBPVFJTIEFHLCBodHRwOi8vb3Rycy5jb20vCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OnBsX0lUUk1BZG1pbklUUk07Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0nfSAgID0gJ0lUUk0nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT3BjamUnfSAgID0gJ09wY2plIElUUk0nOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/pl_ITRMUzytkownicyDoKolejki.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wbF9JVFJNVXp5dGtvd25pY3lEb0tvbGVqa2kucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6cGxfSVRSTVV6eXRrb3duaWN5RG9Lb2xlamtpOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVenl0a293bmljeS1Lb2xlamtpJ30gICA9ICdVxbx5dGtvd25pY3kgPC0+IEtvbGVqa2knOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUG9sYWN6IHV6eXRrb3duaWtvdyB6IGtvbGVqa2FtaSd9ICAgPSAnUG/FgsSFY3ogdcW8eXRrb3duaWvDs3cgeiBrb2xlamthbWkuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByenlwaXN6IG9zb2J5IGRvIGtvbGVqZWsnfSAgID0gJ1VzdGF3IHVkemlhxYIgb3PDs2IgdyBrb2xlamthY2gnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnTGlzdGEgb3NvYid9ICAgPSAnTGlzdGEgb3PDs2InOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUHJvY2VudG93eSB1ZHppYWwnfSAgID0gJ1Byb2NlbnRvd3kgdWR6aWHFgiBjemFzdSBwcmFjeSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eyd3IGtvbGVqa2FjaCd9ICAgPSAndyBrb2xlamthY2g6JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1phcGlzeid9ICAgPSAnWmFwaXN6JzsKCQp9CgoxOwo=</File>
        <File Location="Kernel/Language/pl_ITRMCustom.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9wbF9JVFJNQ3VzdG9tLnBtIC0gcHJvdmlkZXMgeHggY3VzdG9tIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjpwbF9JVFJNQ3VzdG9tOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAjICQkU1RBUlQkJAoKICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3ljZW4gemdsb3N6ZW5pZSd9ID0gJ1d5Y2XFhCB6Z8WCb3N6ZW5pZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSA9ICdaYXNvYnknOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IHpnbG9zemVuaWEnfSA9ICdaYXNvYnkgemfFgm9zemVuaWEnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUHJ6ZWxpY3phIGRvc3RlcG5lIGRsYSBva3Jlc293IHphc29ieSd9ID0gJ1ByemVsaWN6YSBkb3N0ZXBuZSBkbGEgb2tyZXNvdyB6YXNvYnkgcG8gem1pYW5pZSBrYWxlbmRhcnphIGRsYSBrb2pla2knOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29sZWprb3dhbmllIHRpY2tldG93J30gPSAnS29sZWprb3dhbmllIHpnxYJvc3plxYQnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29sZWprb3dhbmllJ30gPSAnS29sZWprb3dhbmllJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0RvbXlzbG55IHN0YXR1cyBha3R1YWxuaWUgcmVhbGl6b3dhbmVnbyB0aWNrZXRhJ30gPSAnRG9teXNsbnkgc3RhdHVzIGFrdHVhbG5pZSByZWFsaXpvd2FuZWdvIHpnxYJvc3plbmlhJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1N0YXR1c3kgd3lzenVraXdhbnljaCBkbyBrb2xlamtvd2FuaWEgemdsb3N6ZW4nfSA9ICdaZ8WCb3N6ZW5pYSBvIG5hc3TEmXB1asSFY3ljaCBzdGF0dXNhY2ggcG93aW5ueSBiecSHIGtvbGVqa293YW5lJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1Bva2F6dWplIGxpbmsgdyBtZW51IGRvIHd5Y2VueSB6Z2xvc3plbmlhJ30gPSAnUG9rYXp1amUgbGluayBkbyB3eWNlbnkgemfFgm9zemVuaWEgdyBtZW51IHpnxYJvc3plbmlhJzsKCiAgICAjIG9yIGEgb3RoZXIgc3ludGF4IHdvdWxkIGJlCiAgICAjICAgICRTZWxmLT57VHJhbnNsYXRpb259ID0gewogICAgIyAgICAgICAgJXskU2VsZi0+e1RyYW5zbGF0aW9ufX0sCiAgICAjICAgICAgICAjIG93biB0cmFuc2xhdGlvbnMKICAgICMgICAgICAgIExvY2sgPT4gJ0xhbGEnLAogICAgIyAgICAgICAgVW5Mb2NrID0+ICdMdWx1JywKICAgICMgICAgfTsKCiAgICAjICQkU1RPUCQkCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_ITRMKolejkowanieTicketow.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9JVFJNS29sZWprb3dhbmllVGlja2V0b3cucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZW5fSVRSTUtvbGVqa293YW5pZVRpY2tldG93OwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamt1aiB0aWNrZXR5J30gICA9ICdUaWNrZXRzIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29sZWprYSd9ICAgPSAnUXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnQWtjamEnfSAgID0gJ0FjdGlvbic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIGtvbGVqa293YW5pZSd9ICAgPSAnUnVuIFRpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIG1vZHVsJ30gICA9ICdSdW4gSVRSTSBmb3IgcXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnVXJ1Y2hvbSBrb2xlamtvd2FuaWUnfSAgID0gJ1J1biBUaWNrZXRzIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3luaWsgZGxhIGtvbGVqa2knfSAgID0gJ1Jlc3VsdCBmb3IgcXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT2JlY25pZSByZWFsaXpvd2FuZSB6Z2xvc3plbmlhJ30gICA9ICdDdXJyZW50bHkgZXhlY3V0ZWQgdGlja2V0cyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydTdGF0dXMnfSAgID0gJ1N0YXRlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1psZWNhamFjeSd9ICAgPSAnWmxlY2FqxIVjeSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPZHBvd2llZHppYWxueSd9ICAgPSAnUmVzcG9uc2libGUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUHJpb3J5dGV0J30gICA9ICdQcmlvcml0eSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSAgID0gJ1Jlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPa3JlcyByZWFsaXphY2ppJ30gICA9ICdQZXJpb2Qgb2YgZXhlY3V0aW9uJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzIG9kJ30gICA9ICdQZXJpb2QgZnJvbSAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnZG8nfSAgID0gJyB0byAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IGRvc3RlcG5lIGRsYSBva3Jlc3UnfSAgID0gJ1Jlc291cmNlcyBhdmFpbGFibGUgZm9yIHBlcmlvZDogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RpY2tldHkgbmllIGtvbGVqa293YW5lJ30gICA9ICdUaWNrZXRzIHdhaXRpbmcgZm9yIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFwaXN6IGtvbGVqbm9zYyd9ICAgPSAnU2F2ZSBvcmRlcic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydCcmFrIHd5c3RhcmN6YWphY2VqIGxpY3pieSBnb2R6aW4nfSAgID0gJ05vIGF2YWlsYWJsZSByZXNvdXJjZXMgZm9yIGV4ZWN1dGlvbiBvZiB0aGF0IHRpY2tldCBpbiBzZWxlY3RlZCBwZXJpb2QuJzsKCQp9CgoxOwo=</File>
        <File Location="Kernel/Language/en_ITRMKolejkiZasoby.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9JVFJNS29sZWpraVphc29ieS5wbSAtIHByb3ZpZGVzIHh4IEtlcm5lbC9Nb2R1bGVzLyoucG0gbW9kdWxlIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjplbl9JVFJNS29sZWpraVphc29ieTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUG9sYWN6IGtvbGVqa2kgeiB6YXNvYmFtaSd9ICAgPSAnQXNzaWduIHJlc291cmNlcyB0byBxdWV1ZXMuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa2ktWmFzb2J5J30gICA9ICdRdWV1ZXMgPC0+IFJlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQcnp5cGlzeiB6YXNvYnknfSAgID0gJ0Fzc2lnbiByZXNvdXJjZXMgdG8gcXVldWVzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RhIGtvbGVqa2EgbmllIG1hIHByenlwaXNhbmVnbyBrYWxlbmRhcnphJ30gICA9ICdUaGF0IHF1ZXVlIGRvZXMgbm90IGhhdmUgY2FsZW5kYXIgYXNzaWduZWQhIFBsZWFzZSBhc3NpZ24gY2FsZW5kYXIgZG8gdGhlIHF1ZXVlISc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUnfSAgID0gJ1RpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUgdGlja2V0b3cnfSAgID0gJ1RpY2tldHMgcXVldWluZy4nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnSVRSTSBLb2xlamtvd2FuaWUnfSAgID0gJ1ZpZXcgb2YgVGlja2V0cyBxdWV1aW5nJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0gS29sZWprb3dhbmllIG9waXMnfSAgID0gJ092ZXJ2aWV3IG9mIElUUk0gcmVzdWx0IGZvciBwYXJ0aWN1bGFyIHF1ZXVlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydMaXN0YSBrb2xlamVrJ30gICA9ICdRdWV1ZSBsaXN0JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20gbW9kdWwgbmEga29sZWpjZSd9ICAgPSAnUnVuIElUUk0gZm9yIHF1ZXVlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20gbW9kdWwgZGxhIGtvbGVqa2knfSAgID0gJ1J1biBJVFJNIGZvciBxdWV1ZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEemllbiBwb2N6YXRrdSd9ICAgPSAnRGF5IG9mIHBlcmlvZCBiZWdpbjogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzeSBkbGEga29sZWpraSd9ICAgPSAnUGVyaW9kcyBmb3IgcXVldWUgJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvY3phdGVrJ30gICA9ICdCZWdpbiBvZiBwZXJpb2QnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29uaWVjJ30gICA9ICdFbmQgb2YgcGVyaW9kJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0Rvc3RlcG5lIHphc29ieSd9ICAgPSAnQXZhaWxhYmxlIHJlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEb2RhaiBva3Jlcyd9ICAgPSAnQWRkIG5ldyBwZXJpb2QnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_ITRMAdminITRM.pm" Permission="644" Encode="Base64">77u/IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9JVFJNQWRtaW5JVFJNLnBtIC0gcHJvdmlkZXMgeHggS2VybmVsL01vZHVsZXMvKi5wbSBtb2R1bGUgbGFuZ3VhZ2UgdHJhbnNsYXRpb24KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMyBPVFJTIEFHLCBodHRwOi8vb3Rycy5jb20vCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmVuX0lUUk1BZG1pbklUUk07Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0nfSAgID0gJ0lUUk0nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT3BjamUnfSAgID0gJ0lUUk0gb3B0aW9ucyc7CgkKfQoKMTsK</File>
        <File Location="Kernel/Language/en_ITRMUzytkownicyDoKolejki.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9JVFJNVXp5dGtvd25pY3lEb0tvbGVqa2kucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZW5fSVRSTVV6eXRrb3duaWN5RG9Lb2xlamtpOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVenl0a293bmljeS1Lb2xlamtpJ30gICA9ICdVc2VycyA8LT4gUXVldWVzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvbGFjeiB1enl0a293bmlrb3cgeiBrb2xlamthbWknfSAgID0gJ0xpbmsgdXNlcnMgd2l0aCBxdWV1ZXMuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByenlwaXN6IG9zb2J5IGRvIGtvbGVqZWsnfSAgID0gJ1NldCBwZXJjZW50YWdlIGF2YWlsYWJpbGl0eSBvZiB1c2VyIGZvciBwYXJ0aWN1bGFyIHF1ZXVlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydMaXN0YSBvc29iJ30gICA9ICdMaXN0IG9mIHVzZXJzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1Byb2NlbnRvd3kgdWR6aWFsJ30gICA9ICdQZXJjZW50YWdlIGF2YWlsYWJpbGl0eSBvZiB3b3JrdGltZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eyd3IGtvbGVqa2FjaCd9ICAgPSAnaW4gcXVldWVzOic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXBpc3onfSAgID0gJ1NhdmUnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_ITRMCustom.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9JVFJNQ3VzdG9tLnBtIC0gcHJvdmlkZXMgeHggY3VzdG9tIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjplbl9JVFJNQ3VzdG9tOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAjICQkU1RBUlQkJAoKICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3ljZW4gemdsb3N6ZW5pZSd9ID0gJ0VzdGltYXRlIHdvcmtsb2FkIG9mIHRpY2tldCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSA9ICdSZXNvdXJjZXMnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IHpnbG9zemVuaWEnfSA9ICdUaWNrZXQgcmVzb3VyY2VzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByemVsaWN6YSBkb3N0ZXBuZSBkbGEgb2tyZXNvdyB6YXNvYnknfSA9ICdSZWNhbGN1bGF0ZXMgYXZhaWxhYmxlIHJlc291cmNlcyBmb3IgcGVyaW9kcyBhZnRlciBxdWV1ZSBjYWxlbmRhciBjaGFuZ2UuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa293YW5pZSB0aWNrZXRvdyd9ID0gJ1RpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUnfSA9ICdRdWV1aW5nJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0RvbXlzbG55IHN0YXR1cyBha3R1YWxuaWUgcmVhbGl6b3dhbmVnbyB0aWNrZXRhJ30gPSAnRGVmYXVsdCBzdGF0ZSBvZiBjdXJyZW50bHkgZXhlY3V0ZWQgdGlja2V0JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1N0YXR1c3kgd3lzenVraXdhbnljaCBkbyBrb2xlamtvd2FuaWEgemdsb3N6ZW4nfSA9ICdUaWNrZXRzIGluIGZvbGxvd2luZyBzdGF0ZXMgc2hvdWxkIGJlIHF1ZXVlZCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQb2thenVqZSBsaW5rIHcgbWVudSBkbyB3eWNlbnkgemdsb3N6ZW5pYSd9ID0gJ1Nob3dzIHRpY2tldCBtZW51IGl0ZW0gZm9yIHdvcmtsb2FkIGVzdGltYXRpb24nOwoKICAgICMgb3IgYSBvdGhlciBzeW50YXggd291bGQgYmUKICAgICMgICAgJFNlbGYtPntUcmFuc2xhdGlvbn0gPSB7CiAgICAjICAgICAgICAleyRTZWxmLT57VHJhbnNsYXRpb259fSwKICAgICMgICAgICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgIyAgICAgICAgTG9jayA9PiAnTGFsYScsCiAgICAjICAgICAgICBVbkxvY2sgPT4gJ0x1bHUnLAogICAgIyAgICB9OwoKICAgICMgJCRTVE9QJCQKfQoKMTsK</File>
        <File Location="Kernel/Language/en_GB_ITRMKolejkowanieTicketow.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9HQl9JVFJNS29sZWprb3dhbmllVGlja2V0b3cucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZW5fR0JfSVRSTUtvbGVqa293YW5pZVRpY2tldG93OwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamt1aiB0aWNrZXR5J30gICA9ICdUaWNrZXRzIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29sZWprYSd9ICAgPSAnUXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnQWtjamEnfSAgID0gJ0FjdGlvbic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIGtvbGVqa293YW5pZSd9ICAgPSAnUnVuIFRpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIG1vZHVsJ30gICA9ICdSdW4gSVRSTSBmb3IgcXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnVXJ1Y2hvbSBrb2xlamtvd2FuaWUnfSAgID0gJ1J1biBUaWNrZXRzIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3luaWsgZGxhIGtvbGVqa2knfSAgID0gJ1Jlc3VsdCBmb3IgcXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT2JlY25pZSByZWFsaXpvd2FuZSB6Z2xvc3plbmlhJ30gICA9ICdDdXJyZW50bHkgZXhlY3V0ZWQgdGlja2V0cyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydTdGF0dXMnfSAgID0gJ1N0YXRlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1psZWNhamFjeSd9ICAgPSAnWmxlY2FqxIVjeSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPZHBvd2llZHppYWxueSd9ICAgPSAnUmVzcG9uc2libGUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUHJpb3J5dGV0J30gICA9ICdQcmlvcml0eSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSAgID0gJ1Jlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPa3JlcyByZWFsaXphY2ppJ30gICA9ICdQZXJpb2Qgb2YgZXhlY3V0aW9uJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzIG9kJ30gICA9ICdQZXJpb2QgZnJvbSAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnZG8nfSAgID0gJyB0byAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IGRvc3RlcG5lIGRsYSBva3Jlc3UnfSAgID0gJ1Jlc291cmNlcyBhdmFpbGFibGUgZm9yIHBlcmlvZDogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RpY2tldHkgbmllIGtvbGVqa293YW5lJ30gICA9ICdUaWNrZXRzIHdhaXRpbmcgZm9yIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFwaXN6IGtvbGVqbm9zYyd9ICAgPSAnU2F2ZSBvcmRlcic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydCcmFrIHd5c3RhcmN6YWphY2VqIGxpY3pieSBnb2R6aW4nfSAgID0gJ05vIGF2YWlsYWJsZSByZXNvdXJjZXMgZm9yIGV4ZWN1dGlvbiBvZiB0aGF0IHRpY2tldCBpbiBzZWxlY3RlZCBwZXJpb2QuJzsKCQp9CgoxOwo=</File>
        <File Location="Kernel/Language/en_GB_ITRMKolejkiZasoby.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9HQl9JVFJNS29sZWpraVphc29ieS5wbSAtIHByb3ZpZGVzIHh4IEtlcm5lbC9Nb2R1bGVzLyoucG0gbW9kdWxlIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjplbl9HQl9JVFJNS29sZWpraVphc29ieTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUG9sYWN6IGtvbGVqa2kgeiB6YXNvYmFtaSd9ICAgPSAnQXNzaWduIHJlc291cmNlcyB0byBxdWV1ZXMuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa2ktWmFzb2J5J30gICA9ICdRdWV1ZXMgPC0+IFJlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQcnp5cGlzeiB6YXNvYnknfSAgID0gJ0Fzc2lnbiByZXNvdXJjZXMgdG8gcXVldWVzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RhIGtvbGVqa2EgbmllIG1hIHByenlwaXNhbmVnbyBrYWxlbmRhcnphJ30gICA9ICdUaGF0IHF1ZXVlIGRvZXMgbm90IGhhdmUgY2FsZW5kYXIgYXNzaWduZWQhIFBsZWFzZSBhc3NpZ24gY2FsZW5kYXIgZG8gdGhlIHF1ZXVlISc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUnfSAgID0gJ1RpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUgdGlja2V0b3cnfSAgID0gJ1RpY2tldHMgcXVldWluZy4nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnSVRSTSBLb2xlamtvd2FuaWUnfSAgID0gJ1ZpZXcgb2YgVGlja2V0cyBxdWV1aW5nJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0gS29sZWprb3dhbmllIG9waXMnfSAgID0gJ092ZXJ2aWV3IG9mIElUUk0gcmVzdWx0IGZvciBwYXJ0aWN1bGFyIHF1ZXVlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydMaXN0YSBrb2xlamVrJ30gICA9ICdRdWV1ZSBsaXN0JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20gbW9kdWwgbmEga29sZWpjZSd9ICAgPSAnUnVuIElUUk0gZm9yIHF1ZXVlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20gbW9kdWwgZGxhIGtvbGVqa2knfSAgID0gJ1J1biBJVFJNIGZvciBxdWV1ZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEemllbiBwb2N6YXRrdSd9ICAgPSAnRGF5IG9mIHBlcmlvZCBiZWdpbjogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzeSBkbGEga29sZWpraSd9ICAgPSAnUGVyaW9kcyBmb3IgcXVldWUgJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvY3phdGVrJ30gICA9ICdCZWdpbiBvZiBwZXJpb2QnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29uaWVjJ30gICA9ICdFbmQgb2YgcGVyaW9kJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0Rvc3RlcG5lIHphc29ieSd9ICAgPSAnQXZhaWxhYmxlIHJlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEb2RhaiBva3Jlcyd9ICAgPSAnQWRkIG5ldyBwZXJpb2QnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_GB_ITRMAdminITRM.pm" Permission="644" Encode="Base64">77u/IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9HQl9JVFJNQWRtaW5JVFJNLnBtIC0gcHJvdmlkZXMgeHggS2VybmVsL01vZHVsZXMvKi5wbSBtb2R1bGUgbGFuZ3VhZ2UgdHJhbnNsYXRpb24KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMyBPVFJTIEFHLCBodHRwOi8vb3Rycy5jb20vCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmVuX0dCX0lUUk1BZG1pbklUUk07Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0nfSAgID0gJ0lUUk0nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT3BjamUnfSAgID0gJ0lUUk0gb3B0aW9ucyc7CgkKfQoKMTsK</File>
        <File Location="Kernel/Language/en_GB_ITRMUzytkownicyDoKolejki.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9HQl9JVFJNVXp5dGtvd25pY3lEb0tvbGVqa2kucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZW5fR0JfSVRSTVV6eXRrb3duaWN5RG9Lb2xlamtpOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVenl0a293bmljeS1Lb2xlamtpJ30gICA9ICdVc2VycyA8LT4gUXVldWVzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvbGFjeiB1enl0a293bmlrb3cgeiBrb2xlamthbWknfSAgID0gJ0xpbmsgdXNlcnMgd2l0aCBxdWV1ZXMuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByenlwaXN6IG9zb2J5IGRvIGtvbGVqZWsnfSAgID0gJ1NldCBwZXJjZW50YWdlIGF2YWlsYWJpbGl0eSBvZiB1c2VyIGZvciBwYXJ0aWN1bGFyIHF1ZXVlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydMaXN0YSBvc29iJ30gICA9ICdMaXN0IG9mIHVzZXJzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1Byb2NlbnRvd3kgdWR6aWFsJ30gICA9ICdQZXJjZW50YWdlIGF2YWlsYWJpbGl0eSBvZiB3b3JrdGltZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eyd3IGtvbGVqa2FjaCd9ICAgPSAnaW4gcXVldWVzOic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXBpc3onfSAgID0gJ1NhdmUnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_GB_ITRMCustom.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9HQl9JVFJNQ3VzdG9tLnBtIC0gcHJvdmlkZXMgeHggY3VzdG9tIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjplbl9HQl9JVFJNQ3VzdG9tOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAjICQkU1RBUlQkJAoKICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3ljZW4gemdsb3N6ZW5pZSd9ID0gJ0VzdGltYXRlIHdvcmtsb2FkIG9mIHRpY2tldCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSA9ICdSZXNvdXJjZXMnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IHpnbG9zemVuaWEnfSA9ICdUaWNrZXQgcmVzb3VyY2VzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByemVsaWN6YSBkb3N0ZXBuZSBkbGEgb2tyZXNvdyB6YXNvYnknfSA9ICdSZWNhbGN1bGF0ZXMgYXZhaWxhYmxlIHJlc291cmNlcyBmb3IgcGVyaW9kcyBhZnRlciBxdWV1ZSBjYWxlbmRhciBjaGFuZ2UuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa293YW5pZSB0aWNrZXRvdyd9ID0gJ1RpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUnfSA9ICdRdWV1aW5nJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0RvbXlzbG55IHN0YXR1cyBha3R1YWxuaWUgcmVhbGl6b3dhbmVnbyB0aWNrZXRhJ30gPSAnRGVmYXVsdCBzdGF0ZSBvZiBjdXJyZW50bHkgZXhlY3V0ZWQgdGlja2V0JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1N0YXR1c3kgd3lzenVraXdhbnljaCBkbyBrb2xlamtvd2FuaWEgemdsb3N6ZW4nfSA9ICdUaWNrZXRzIGluIGZvbGxvd2luZyBzdGF0ZXMgc2hvdWxkIGJlIHF1ZXVlZCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQb2thenVqZSBsaW5rIHcgbWVudSBkbyB3eWNlbnkgemdsb3N6ZW5pYSd9ID0gJ1Nob3dzIHRpY2tldCBtZW51IGl0ZW0gZm9yIHdvcmtsb2FkIGVzdGltYXRpb24nOwoKICAgICMgb3IgYSBvdGhlciBzeW50YXggd291bGQgYmUKICAgICMgICAgJFNlbGYtPntUcmFuc2xhdGlvbn0gPSB7CiAgICAjICAgICAgICAleyRTZWxmLT57VHJhbnNsYXRpb259fSwKICAgICMgICAgICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgIyAgICAgICAgTG9jayA9PiAnTGFsYScsCiAgICAjICAgICAgICBVbkxvY2sgPT4gJ0x1bHUnLAogICAgIyAgICB9OwoKICAgICMgJCRTVE9QJCQKfQoKMTsK</File>
        <File Location="Kernel/Language/en_CA_ITRMKolejkowanieTicketow.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9DQV9JVFJNS29sZWprb3dhbmllVGlja2V0b3cucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZW5fQ0FfSVRSTUtvbGVqa293YW5pZVRpY2tldG93OwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamt1aiB0aWNrZXR5J30gICA9ICdUaWNrZXRzIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29sZWprYSd9ICAgPSAnUXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnQWtjamEnfSAgID0gJ0FjdGlvbic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIGtvbGVqa293YW5pZSd9ICAgPSAnUnVuIFRpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVcnVjaG9tIG1vZHVsJ30gICA9ICdSdW4gSVRSTSBmb3IgcXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnVXJ1Y2hvbSBrb2xlamtvd2FuaWUnfSAgID0gJ1J1biBUaWNrZXRzIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3luaWsgZGxhIGtvbGVqa2knfSAgID0gJ1Jlc3VsdCBmb3IgcXVldWUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT2JlY25pZSByZWFsaXpvd2FuZSB6Z2xvc3plbmlhJ30gICA9ICdDdXJyZW50bHkgZXhlY3V0ZWQgdGlja2V0cyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydTdGF0dXMnfSAgID0gJ1N0YXRlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1psZWNhamFjeSd9ICAgPSAnWmxlY2FqxIVjeSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPZHBvd2llZHppYWxueSd9ICAgPSAnUmVzcG9uc2libGUnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUHJpb3J5dGV0J30gICA9ICdQcmlvcml0eSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSAgID0gJ1Jlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydPa3JlcyByZWFsaXphY2ppJ30gICA9ICdQZXJpb2Qgb2YgZXhlY3V0aW9uJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzIG9kJ30gICA9ICdQZXJpb2QgZnJvbSAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnZG8nfSAgID0gJyB0byAnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IGRvc3RlcG5lIGRsYSBva3Jlc3UnfSAgID0gJ1Jlc291cmNlcyBhdmFpbGFibGUgZm9yIHBlcmlvZDogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RpY2tldHkgbmllIGtvbGVqa293YW5lJ30gICA9ICdUaWNrZXRzIHdhaXRpbmcgZm9yIHF1ZXVpbmcnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFwaXN6IGtvbGVqbm9zYyd9ICAgPSAnU2F2ZSBvcmRlcic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydCcmFrIHd5c3RhcmN6YWphY2VqIGxpY3pieSBnb2R6aW4nfSAgID0gJ05vIGF2YWlsYWJsZSByZXNvdXJjZXMgZm9yIGV4ZWN1dGlvbiBvZiB0aGF0IHRpY2tldCBpbiBzZWxlY3RlZCBwZXJpb2QuJzsKCQp9CgoxOwo=</File>
        <File Location="Kernel/Language/en_CA_ITRMKolejkiZasoby.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9DQV9JVFJNS29sZWpraVphc29ieS5wbSAtIHByb3ZpZGVzIHh4IEtlcm5lbC9Nb2R1bGVzLyoucG0gbW9kdWxlIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjplbl9DQV9JVFJNS29sZWpraVphc29ieTsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKCnN1YiBEYXRhIHsKICAgIG15ICRTZWxmID0gc2hpZnQ7CgogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnUG9sYWN6IGtvbGVqa2kgeiB6YXNvYmFtaSd9ICAgPSAnQXNzaWduIHJlc291cmNlcyB0byBxdWV1ZXMuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa2ktWmFzb2J5J30gICA9ICdRdWV1ZXMgPC0+IFJlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQcnp5cGlzeiB6YXNvYnknfSAgID0gJ0Fzc2lnbiByZXNvdXJjZXMgdG8gcXVldWVzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1RhIGtvbGVqa2EgbmllIG1hIHByenlwaXNhbmVnbyBrYWxlbmRhcnphJ30gICA9ICdUaGF0IHF1ZXVlIGRvZXMgbm90IGhhdmUgY2FsZW5kYXIgYXNzaWduZWQhIFBsZWFzZSBhc3NpZ24gY2FsZW5kYXIgZG8gdGhlIHF1ZXVlISc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUnfSAgID0gJ1RpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUgdGlja2V0b3cnfSAgID0gJ1RpY2tldHMgcXVldWluZy4nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnSVRSTSBLb2xlamtvd2FuaWUnfSAgID0gJ1ZpZXcgb2YgVGlja2V0cyBxdWV1aW5nJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0gS29sZWprb3dhbmllIG9waXMnfSAgID0gJ092ZXJ2aWV3IG9mIElUUk0gcmVzdWx0IGZvciBwYXJ0aWN1bGFyIHF1ZXVlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydMaXN0YSBrb2xlamVrJ30gICA9ICdRdWV1ZSBsaXN0JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20gbW9kdWwgbmEga29sZWpjZSd9ICAgPSAnUnVuIElUUk0gZm9yIHF1ZXVlJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1VydWNob20gbW9kdWwgZGxhIGtvbGVqa2knfSAgID0gJ1J1biBJVFJNIGZvciBxdWV1ZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEemllbiBwb2N6YXRrdSd9ICAgPSAnRGF5IG9mIHBlcmlvZCBiZWdpbjogJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J09rcmVzeSBkbGEga29sZWpraSd9ICAgPSAnUGVyaW9kcyBmb3IgcXVldWUgJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvY3phdGVrJ30gICA9ICdCZWdpbiBvZiBwZXJpb2QnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnS29uaWVjJ30gICA9ICdFbmQgb2YgcGVyaW9kJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0Rvc3RlcG5lIHphc29ieSd9ICAgPSAnQXZhaWxhYmxlIHJlc291cmNlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydEb2RhaiBva3Jlcyd9ICAgPSAnQWRkIG5ldyBwZXJpb2QnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_CA_ITRMAdminITRM.pm" Permission="644" Encode="Base64">77u/IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9DQV9JVFJNQWRtaW5JVFJNLnBtIC0gcHJvdmlkZXMgeHggS2VybmVsL01vZHVsZXMvKi5wbSBtb2R1bGUgbGFuZ3VhZ2UgdHJhbnNsYXRpb24KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMyBPVFJTIEFHLCBodHRwOi8vb3Rycy5jb20vCiMgLS0KIyBUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UKIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0LgojIC0tCgpwYWNrYWdlIEtlcm5lbDo6TGFuZ3VhZ2U6OmVuX0NBX0lUUk1BZG1pbklUUk07Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7CgpzdWIgRGF0YSB7CiAgICBteSAkU2VsZiA9IHNoaWZ0OwoKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0lUUk0nfSAgID0gJ0lUUk0nOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnT3BjamUnfSAgID0gJ0lUUk0gb3B0aW9ucyc7CgkKfQoKMTsK</File>
        <File Location="Kernel/Language/en_CA_ITRMUzytkownicyDoKolejki.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9DQV9JVFJNVXp5dGtvd25pY3lEb0tvbGVqa2kucG0gLSBwcm92aWRlcyB4eCBLZXJuZWwvTW9kdWxlcy8qLnBtIG1vZHVsZSBsYW5ndWFnZSB0cmFuc2xhdGlvbgojIENvcHlyaWdodCAoQykgMjAwMS0yMDEzIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQojIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpMYW5ndWFnZTo6ZW5fQ0FfSVRSTVV6eXRrb3duaWN5RG9Lb2xlamtpOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydVenl0a293bmljeS1Lb2xlamtpJ30gICA9ICdVc2VycyA8LT4gUXVldWVzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1BvbGFjeiB1enl0a293bmlrb3cgeiBrb2xlamthbWknfSAgID0gJ0xpbmsgdXNlcnMgd2l0aCBxdWV1ZXMuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByenlwaXN6IG9zb2J5IGRvIGtvbGVqZWsnfSAgID0gJ1NldCBwZXJjZW50YWdlIGF2YWlsYWJpbGl0eSBvZiB1c2VyIGZvciBwYXJ0aWN1bGFyIHF1ZXVlcyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydMaXN0YSBvc29iJ30gICA9ICdMaXN0IG9mIHVzZXJzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1Byb2NlbnRvd3kgdWR6aWFsJ30gICA9ICdQZXJjZW50YWdlIGF2YWlsYWJpbGl0eSBvZiB3b3JrdGltZSc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eyd3IGtvbGVqa2FjaCd9ICAgPSAnaW4gcXVldWVzOic7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXBpc3onfSAgID0gJ1NhdmUnOwoJCn0KCjE7Cg==</File>
        <File Location="Kernel/Language/en_CA_ITRMCustom.pm" Permission="644" Encode="Base64">IyAtLQojIEtlcm5lbC9MYW5ndWFnZS9lbl9DQV9JVFJNQ3VzdG9tLnBtIC0gcHJvdmlkZXMgeHggY3VzdG9tIGxhbmd1YWdlIHRyYW5zbGF0aW9uCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKcGFja2FnZSBLZXJuZWw6Okxhbmd1YWdlOjplbl9DQV9JVFJNQ3VzdG9tOwoKdXNlIHN0cmljdDsKdXNlIHdhcm5pbmdzOwoKc3ViIERhdGEgewogICAgbXkgJFNlbGYgPSBzaGlmdDsKCiAgICAjICQkU1RBUlQkJAoKICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnV3ljZW4gemdsb3N6ZW5pZSd9ID0gJ0VzdGltYXRlIHdvcmtsb2FkIG9mIHRpY2tldCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydaYXNvYnknfSA9ICdSZXNvdXJjZXMnOwogICAgJFNlbGYtPntUcmFuc2xhdGlvbn0tPnsnWmFzb2J5IHpnbG9zemVuaWEnfSA9ICdUaWNrZXQgcmVzb3VyY2VzJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1ByemVsaWN6YSBkb3N0ZXBuZSBkbGEgb2tyZXNvdyB6YXNvYnknfSA9ICdSZWNhbGN1bGF0ZXMgYXZhaWxhYmxlIHJlc291cmNlcyBmb3IgcGVyaW9kcyBhZnRlciBxdWV1ZSBjYWxlbmRhciBjaGFuZ2UuJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0tvbGVqa293YW5pZSB0aWNrZXRvdyd9ID0gJ1RpY2tldHMgcXVldWluZyc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydLb2xlamtvd2FuaWUnfSA9ICdRdWV1aW5nJzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J0RvbXlzbG55IHN0YXR1cyBha3R1YWxuaWUgcmVhbGl6b3dhbmVnbyB0aWNrZXRhJ30gPSAnRGVmYXVsdCBzdGF0ZSBvZiBjdXJyZW50bHkgZXhlY3V0ZWQgdGlja2V0JzsKICAgICRTZWxmLT57VHJhbnNsYXRpb259LT57J1N0YXR1c3kgd3lzenVraXdhbnljaCBkbyBrb2xlamtvd2FuaWEgemdsb3N6ZW4nfSA9ICdUaWNrZXRzIGluIGZvbGxvd2luZyBzdGF0ZXMgc2hvdWxkIGJlIHF1ZXVlZCc7CiAgICAkU2VsZi0+e1RyYW5zbGF0aW9ufS0+eydQb2thenVqZSBsaW5rIHcgbWVudSBkbyB3eWNlbnkgemdsb3N6ZW5pYSd9ID0gJ1Nob3dzIHRpY2tldCBtZW51IGl0ZW0gZm9yIHdvcmtsb2FkIGVzdGltYXRpb24nOwoKICAgICMgb3IgYSBvdGhlciBzeW50YXggd291bGQgYmUKICAgICMgICAgJFNlbGYtPntUcmFuc2xhdGlvbn0gPSB7CiAgICAjICAgICAgICAleyRTZWxmLT57VHJhbnNsYXRpb259fSwKICAgICMgICAgICAgICMgb3duIHRyYW5zbGF0aW9ucwogICAgIyAgICAgICAgTG9jayA9PiAnTGFsYScsCiAgICAjICAgICAgICBVbkxvY2sgPT4gJ0x1bHUnLAogICAgIyAgICB9OwoKICAgICMgJCRTVE9QJCQKfQoKMTsK</File>
        <File Location="Kernel/Output/HTML/NavBarModuleAdminITRM.pm" Permission="644" Encode="Base64">IyAtLQ0KIyBLZXJuZWwvT3V0cHV0L0hUTUwvTmF2QmFyTW9kdWxlQWRtaW5JVFJNLnBtDQojIENvcHlyaWdodCAoQykgMjAwMS0yMDEwIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8NCiMgLS0NCiMgJElkOiBOYXZCYXJNb2R1bGVBZG1pbklUUk0ucG0sdiAxLjExIDIwMTAvMDcvMTUgMTI6MzE6NDUgbWcgRXhwICQNCiMgLS0NCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQ0KIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0Lg0KIyAtLQ0KDQpwYWNrYWdlIEtlcm5lbDo6T3V0cHV0OjpIVE1MOjpOYXZCYXJNb2R1bGVBZG1pbklUUk07DQoNCnVzZSBzdHJpY3Q7DQp1c2Ugd2FybmluZ3M7DQoNCnVzZSB2YXJzIHF3KCRWRVJTSU9OKTsNCiRWRVJTSU9OID0gcXcoJFJldmlzaW9uOiAxLjExICQpIFsxXTsNCg0Kc3ViIG5ldyB7DQogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsNCg0KICAgICMgYWxsb2NhdGUgbmV3IGhhc2ggZm9yIG9iamVjdA0KICAgIG15ICRTZWxmID0ge307DQogICAgYmxlc3MoICRTZWxmLCAkVHlwZSApOw0KDQogICAgIyBnZXQgbmVlZGVkIG9iamVjdHMNCiAgICBmb3IgKHF3KENvbmZpZ09iamVjdCBMb2dPYmplY3QgREJPYmplY3QgVGlja2V0T2JqZWN0IExheW91dE9iamVjdCBVc2VySUQpKSB7DQogICAgICAgICRTZWxmLT57JF99ID0gJFBhcmFteyRffSB8fCBkaWUgIkdvdCBubyAkXyEiOw0KICAgIH0NCiAgICByZXR1cm4gJFNlbGY7DQp9DQoNCnN1YiBSdW4gew0KICAgIG15ICggJFNlbGYsICVQYXJhbSApID0gQF87DQoNCiAgICAjIG9ubHkgc2hvdyBpdCBvbiBhZG1pbiBzdGFydCBzY3JlZW4NCiAgICByZXR1cm4gJycgaWYgJFNlbGYtPntMYXlvdXRPYmplY3R9LT57QWN0aW9ufSBuZSAnQWRtaW5JVFJNJzsNCg0KICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soDQogICAgICAgIE5hbWUgPT4gJ0FkbWluTmF2QmFyJywNCiAgICAgICAgRGF0YSA9PiB7fSwNCiAgICApOw0KDQogICAgIyBnZXQgYWxsIEZyb250ZW5kOjpNb2R1bGUNCiAgICBteSAlTmF2QmFyTW9kdWxlOw0KICAgIG15ICRGcm9udGVuZE1vZHVsZUNvbmZpZyA9ICRTZWxmLT57Q29uZmlnT2JqZWN0fS0+R2V0KCdGcm9udGVuZDo6TW9kdWxlJyk7DQogICAgZm9yIG15ICRNb2R1bGUgKCBzb3J0IGtleXMgJXskRnJvbnRlbmRNb2R1bGVDb25maWd9ICkgew0KICAgICAgICBteSAlSGFzaCA9ICV7ICRGcm9udGVuZE1vZHVsZUNvbmZpZy0+eyRNb2R1bGV9IH07DQogICAgICAgIGlmICgNCiAgICAgICAgICAgICRIYXNoe05hdkJhck1vZHVsZX0NCiAgICAgICAgICAgICYmICRIYXNoe05hdkJhck1vZHVsZX0tPntNb2R1bGV9IGVxICdLZXJuZWw6Ok91dHB1dDo6SFRNTDo6TmF2QmFyTW9kdWxlQWRtaW5JVFJNJw0KICAgICAgICAgICAgKQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgICMgY2hlY2sgcGVybWlzc2lvbnMgKG9ubHkgc2hvdyBhY2Nlc3NhYmxlIG1vZHVsZXMpDQogICAgICAgICAgICBteSAkU2hvd24gPSAwOw0KICAgICAgICAgICAgZm9yIG15ICRQZXJtaXNzaW9uIChxdyhHcm91cFJvIEdyb3VwKSkgew0KDQogICAgICAgICAgICAgICAgIyBhcnJheSBhY2Nlc3MgcmVzdHJpY3Rpb24NCiAgICAgICAgICAgICAgICBpZiAoICRIYXNoeyRQZXJtaXNzaW9ufSAmJiByZWYgJEhhc2h7JFBlcm1pc3Npb259IGVxICdBUlJBWScgKSB7DQogICAgICAgICAgICAgICAgICAgIGZvciAoIEB7ICRIYXNoeyRQZXJtaXNzaW9ufSB9ICkgew0KICAgICAgICAgICAgICAgICAgICAgICAgbXkgJEtleSA9ICdVc2VySXMnIC4gJFBlcm1pc3Npb24gLiAnWycgLiAkXyAuICddJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPnskS2V5fQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+eyRLZXl9IGVxICdZZXMnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRTaG93biA9IDE7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICMgc2NhbGFyIGFjY2VzcyByZXN0cmljdGlvbg0KICAgICAgICAgICAgICAgIGVsc2lmICggJEhhc2h7JFBlcm1pc3Npb259ICkgew0KICAgICAgICAgICAgICAgICAgICBteSAkS2V5ID0gJ1VzZXJJcycgLiAkUGVybWlzc2lvbiAuICdbJyAuICRIYXNoeyRQZXJtaXNzaW9ufSAuICddJzsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCAkU2VsZi0+e0xheW91dE9iamVjdH0tPnskS2V5fSAmJiAkU2VsZi0+e0xheW91dE9iamVjdH0tPnskS2V5fSBlcSAnWWVzJyApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRTaG93biA9IDE7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAjIG5vIGFjY2VzcyByZXN0cmljdGlvbg0KICAgICAgICAgICAgICAgIGVsc2lmICggISRIYXNoe0dyb3VwUm99ICYmICEkSGFzaHtHcm91cH0gKSB7DQogICAgICAgICAgICAgICAgICAgICRTaG93biA9IDE7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9DQogICAgICAgICAgICBuZXh0IGlmICEkU2hvd247DQoNCiAgICAgICAgICAgIG15ICRLZXkgPSBzcHJpbnRmKCAiJTA3ZCIsICRIYXNoe05hdkJhck1vZHVsZX0tPntQcmlvfSB8fCAwICk7DQogICAgICAgICAgICBmb3IgKCAxIC4uIDUxICkgew0KICAgICAgICAgICAgICAgIGlmICggJE5hdkJhck1vZHVsZXskS2V5fSApIHsNCiAgICAgICAgICAgICAgICAgICAgJEhhc2h7TmF2QmFyTW9kdWxlfS0+e1ByaW99Kys7DQogICAgICAgICAgICAgICAgICAgICRLZXkgPSBzcHJpbnRmKCAiJTA3ZCIsICRIYXNoe05hdkJhck1vZHVsZX0tPntQcmlvfSApOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoICEkTmF2QmFyTW9kdWxleyRLZXl9ICkgew0KICAgICAgICAgICAgICAgICAgICBsYXN0Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICROYXZCYXJNb2R1bGV7JEtleX0gPSB7DQogICAgICAgICAgICAgICAgJ0Zyb250ZW5kOjpNb2R1bGUnID0+ICRNb2R1bGUsDQogICAgICAgICAgICAgICAgJUhhc2gsDQogICAgICAgICAgICAgICAgJXsgJEhhc2h7TmF2QmFyTW9kdWxlfSB9LA0KICAgICAgICAgICAgfTsNCg0KICAgICAgICB9DQogICAgfQ0KICAgIG15ICVDb3VudDsNCiAgICBmb3IgbXkgJE1vZHVsZSAoIHNvcnQga2V5cyAlTmF2QmFyTW9kdWxlICkgew0KICAgICAgICBteSAkQmxvY2tOYW1lID0gJE5hdkJhck1vZHVsZXskTW9kdWxlfS0+e05hdkJhck1vZHVsZX0tPntCbG9ja30gfHwgJ0l0ZW0nOw0KICAgICAgICAkU2VsZi0+e0xheW91dE9iamVjdH0tPkJsb2NrKA0KICAgICAgICAgICAgTmFtZSA9PiAkQmxvY2tOYW1lLA0KICAgICAgICAgICAgRGF0YSA9PiAkTmF2QmFyTW9kdWxleyRNb2R1bGV9LA0KICAgICAgICApOw0KICAgICAgICBpZiAoICRDb3VudHskQmxvY2tOYW1lfSsrICUgMiApIHsNCiAgICAgICAgICAgICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+QmxvY2soIE5hbWUgPT4gJEJsb2NrTmFtZSAuICdDbGVhcicgKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIG15ICRPdXRwdXQgPSAkU2VsZi0+e0xheW91dE9iamVjdH0tPk91dHB1dCgNCiAgICAgICAgVGVtcGxhdGVGaWxlID0+ICdBZG1pbk5hdmlnYXRpb25CYXJJVFJNJywNCiAgICAgICAgRGF0YSAgICAgICAgID0+IFwlUGFyYW0sDQogICAgKTsNCg0KICAgIHJldHVybiAkT3V0cHV0Ow0KfQ0KDQoxOw0K</File>
        <File Location="Kernel/Output/HTML/Standard/AgentTicketZasoby.dtl" Permission="644" Encode="Base64">IyAtLQojIEFnZW50VGlja2V0Q2xvc2UuZHRsIC0gcHJvdmlkZXMgSFRNTCBmb3JtIGZvciBjbG9zZSBtYXNrCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTMgT1RSUyBBRywgaHR0cDovL290cnMuY29tLwojIC0tCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUKIyB0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChBR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4KIyAtLQoKJEluY2x1ZGV7IkFnZW50VGlja2V0QWN0aW9uQ29tbW9uIn0K</File>
        <File Location="Kernel/Output/HTML/Standard/KolejkowanieTicketow.dtl" Permission="644" Encode="Base64">IyAtLQ0KIyBLb2xlamtpWmFzb2J5LmR0bCAtIHByb3ZpZGVzIEhUTUwgZm9ybSBmb3IgS29sZWpraVphc29ieQ0KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMiBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvDQojIC0tDQojICRJZDogS29sZWpraVphc29ieS5kdGwsdiAxLjI2IDIwMTIvMDEvMDkgMTQ6MDQ6MjkgbWcgRXhwICQNCiMgLS0NCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQ0KIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0Lg0KIyAtLQ0KDQo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4NCg0KPGRpdiBjbGFzcz0iTWFpbkJveCBBUklBUm9sZU1haW4gTGF5b3V0Rml4ZWRTaWRlYmFyIFNpZGViYXJGaXJzdCI+DQogICAgPGgxPiRUZXh0eyJLb2xlamt1aiB0aWNrZXR5In08L2gxPg0KICAgIDxkaXYgY2xhc3M9IkNvbnRlbnRDb2x1bW4iPgkNCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3UmVzdWx0IC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4NCiAgICAgICAgICAgICAgICA8aDI+JFRleHR7Ikxpc3QifTwvaDI+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPg0KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iRGF0YVRhYmxlIiBpZD0idGFiZWxha29sZWprb3dhbmlhIj4NCiAgICAgICAgICAgICAgICAgICAgPHRoZWFkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4kVGV4dHsiS29sZWprYSJ9PC90aD4NCgkJCQkJCQk8dGggY29sc3Bhbj0iMiI+JFRleHR7IkFrY2phIn08L3RoPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgPC90aGVhZD4NCiAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KPCEtLSBkdGw6YmxvY2s6Tm9EYXRhRm91bmRNc2cgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49IjIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVGV4dHsiTm8gZGF0YSBmb3VuZC4ifQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KPCEtLSBkdGw6YmxvY2s6Tm9EYXRhRm91bmRNc2cgLS0+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld1Jlc3VsdFJvdyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJBc0Jsb2NrIiBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPSRFbnZ7IkFjdGlvbiJ9O1N1YmFjdGlvbj1XeW5paztRdWV1ZUlEPSRMUURhdGF7IlF1ZXVlSUQifSI+JFFEYXRheyJOYW1lIn08L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCgkJCQkJCQk8dGQgY2xhc3M9ImtvbnRlbmVyYWtjamkiPg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSZXN1bHRSb3dSdW5Lb2xlamtvd2FuaWUgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkNhbGxGb3JBY3Rpb24iIGhyZWY9IiRFbnZ7IkJhc2VsaW5rIn1BY3Rpb249JEVudnsiQWN0aW9uIn07U3ViYWN0aW9uPUtvbGVqa3VqO1F1ZXVlSUQ9JExRRGF0YXsiUXVldWVJRCJ9Ij48c3Bhbj4kVGV4dHsiVXJ1Y2hvbSBrb2xlamtvd2FuaWUifTwvc3Bhbj48L2E+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld1Jlc3VsdFJvd1J1bktvbGVqa293YW5pZSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KCQkJCQkJCTx0ZCBjbGFzcz0ia29udGVuZXJha2NqaSI+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld1Jlc3VsdFJvd1J1bk1vZHVsZSAtLT4JCQkJCQkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkNhbGxGb3JBY3Rpb24iIGhyZWY9IiRFbnZ7IkJhc2VsaW5rIn1BY3Rpb249S29sZWpraVphc29ieTtTdWJhY3Rpb249Q2hhbmdlO1F1ZXVlSUQ9JExRRGF0YXsiUXVldWVJRCJ9Ij48c3Bhbj4kVGV4dHsiVXJ1Y2hvbSBtb2R1bCJ9PC9zcGFuPjwvYT4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3UmVzdWx0Um93UnVuTW9kdWxlIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSZXN1bHRSb3cgLS0+DQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3UmVzdWx0IC0tPg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9IkNsZWFyIj48L2Rpdj4NCjwvZGl2Pg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXcgLS0+DQo8IS0tIGR0bDpibG9jazpFZGl0UmVzdWx0T3ZlcnZpZXcgLS0+DQo8ZGl2IGNsYXNzPSJNYWluQm94IEFSSUFSb2xlTWFpbiBMYXlvdXRGaXhlZFNpZGViYXIgU2lkZWJhckZpcnN0IiBpZD0idGFiZWxha29sZWprb3dhbmlhc2VjIj4NCiAgICA8IS0tPGgxPiRUZXh0eyJLb2xlamt1aiB0aWNrZXR5In08L2gxPi0tPg0KICAgIDxkaXYgY2xhc3M9IkNvbnRlbnRDb2x1bW4iPg0KCQk8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4NCiAgICAgICAgICAgICAgICA8aDI+JFRleHR7Ild5bmlrIGRsYSBrb2xlamtpIn0gJFFEYXRheyJOYW1lIn08L2gyPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4NCgkJCTxmb3JtIGFjdGlvbj0iJEVudnsiQ0dJSGFuZGxlIn0iIG1ldGhvZD0icG9zdCIgY2xhc3M9IlZhbGlkYXRlIFByZXZlbnRNdWx0aXBsZVN1Ym1pdHMiPg0KCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkFjdGlvbiIgdmFsdWU9IiRFbnZ7IkFjdGlvbiJ9Ii8+DQoJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iU3ViYWN0aW9uIiB2YWx1ZT0iU2F2ZSIvPg0KCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlF1ZXVlSUQiIHZhbHVlPSIkUURhdGF7IlF1ZXVlSUQifSIvPgkNCjwhLS0gZHRsOmJsb2NrOk9iZWNuaWVSZWFsaXpvd2FuZSAtLT4JCQkNCgkJCQk8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KCQkJCQk8ZGl2IGNsYXNzPSJIZWFkZXIiPg0KCQkJCQkJPGgyPiRUZXh0eyJPYmVjbmllIHJlYWxpem93YW5lIHpnbG9zemVuaWEifTwvaDI+DQoJCQkJCTwvZGl2Pg0KCQkJCQk8ZGl2IGNsYXNzPSJDb250ZW50Ij4NCgkJCQkJCTx0YWJsZSBjbGFzcz0iRGF0YVRhYmxlIiBpZD0idGFiZWxhYWt0dWFsbmllIj4NCgkJCQkJCQk8dGhlYWQ+DQoJCQkJCQkJCTx0cj4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiVGlja2V0IE51bWJlciJ9PC90aD4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiVGl0bGUifTwvdGg+DQoJCQkJCQkJCQk8dGg+JFRleHR7IlN0YXR1cyJ9PC90aD4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiWmxlY2FqYWN5In08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJPZHBvd2llZHppYWxueSJ9PC90aD4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiUHJpb3J5dGV0In08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJaYXNvYnkifTwvdGg+DQoJCQkJCQkJCTwvdHI+DQoJCQkJCQkJPC90aGVhZD4NCgkJCQkJCQk8dGJvZHk+DQo8IS0tIGR0bDpibG9jazpPYmVjbmllUmVhbGl6b3dhbmVSZXN1bHRSb3cgLS0+DQoJCQkJCQkJCTx0cj4NCgkJCQkJCQkJCTx0ZCBjbGFzcz0nJFFEYXRheyJLbGFzYVByemV0ZXJtaW5vd2FuaWEifSc+DQoJCQkJCQkJCQkJPGEgaHJlZj0iJEVudnsiQmFzZWxpbmsifUFjdGlvbj1BZ2VudFRpY2tldFpvb207VGlja2V0SUQ9JERhdGF7IlRpY2tldElEIn0iIHRpdGxlPSIkUURhdGF7IlRpdGxlIn0iIGNsYXNzPSJBc0Jsb2NrIE1hc3RlckFjdGlvbkxpbmsiPiRRRGF0YXsiVGlja2V0TnVtYmVyIn08L2E+DQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQkJPHRkIGNsYXNzPSckUURhdGF7IktsYXNhUHJ6ZXRlcm1pbm93YW5pYSJ9Jz4NCgkJCQkJCQkJCQk8ZGl2IHRpdGxlPSIkUURhdGF7IlRpY2tldFRpdGxlIn0iIHN0eWxlPSd3aWR0aDozMDBweDsnPiRRRGF0YXsiVGl0bGUiLCIxNTAifTwvZGl2Pg0KCQkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJCTx0ZCBjbGFzcz0nJFFEYXRheyJLbGFzYVByemV0ZXJtaW5vd2FuaWEifSc+DQoJCQkJCQkJCQkJJFRleHR7IiRRRGF0YXsiU3RhdGUifSJ9DQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQkJPHRkIGNsYXNzPSckUURhdGF7IktsYXNhUHJ6ZXRlcm1pbm93YW5pYSJ9Jz4kUURhdGF7IkN1c3RvbWVyTmFtZSJ9PC90ZD4NCgkJCQkJCQkJCTx0ZCBjbGFzcz0nJFFEYXRheyJLbGFzYVByemV0ZXJtaW5vd2FuaWEifSc+JFFEYXRheyJSZXNwb25zaWJsZU5hbWUifTwvdGQ+DQoJCQkJCQkJCQk8dGQgY2xhc3M9JyRRRGF0YXsiS2xhc2FQcnpldGVybWlub3dhbmlhIn0nPg0KCQkJCQkJCQkJCSRRRGF0YXsiUHJpb3JpdHkifQ0KCQkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJCTx0ZCBjbGFzcz0nJFFEYXRheyJLbGFzYVByemV0ZXJtaW5vd2FuaWEifSc+JFFEYXRheyJEeW5hbWljRmllbGRfWmFzb2J5In08L3RkPg0KCQkJCQkJCQk8L3RyPg0KPCEtLSBkdGw6YmxvY2s6T2JlY25pZVJlYWxpem93YW5lUmVzdWx0Um93IC0tPgkNCjwhLS0gZHRsOmJsb2NrOk9iZWNuaWVSZWFsaXpvd2FuZU5vRGF0YUZvdW5kTXNnIC0tPg0KCQkJCQkJCQk8dHI+DQoJCQkJCQkJCQk8dGQgY29sc3Bhbj0iNyI+DQoJCQkJCQkJCQkJJFRleHR7Ik5vIGRhdGEgZm91bmQuIn0NCgkJCQkJCQkJCTwvdGQ+DQoJCQkJCQkJCTwvdHI+DQo8IS0tIGR0bDpibG9jazpPYmVjbmllUmVhbGl6b3dhbmVOb0RhdGFGb3VuZE1zZyAtLT4JCQkJCQkJDQoJCQkJCQkJPC90Ym9keT4NCgkJCQkJCTwvdGFibGU+DQoJCQkJCTwvZGl2Pg0KCQkJCTwvZGl2Pg0KPCEtLSBkdGw6YmxvY2s6T2JlY25pZVJlYWxpem93YW5lIC0tPg0KCQkJPGZpZWxkc2V0Pg0KPCEtLSBkdGw6YmxvY2s6T2tyZXN5IC0tPgkJCQ0KCQkJCTxkaXYgY2xhc3M9IldpZGdldFNpbXBsZSI+DQoJCQkJCTxkaXYgY2xhc3M9IkhlYWRlciI+DQoJCQkJCQk8aDI+JFRleHR7Ik9rcmVzIG9kIn0kUURhdGF7Im9kIn0kVGV4dHsiZG8ifSRRRGF0YXsiZG8ifSA8c3BhbiBzdHlsZT0iZmxvYXQ6IHJpZ2h0OyI+JFRleHR7Ilphc29ieSBkb3N0ZXBuZSBkbGEgb2tyZXN1In08aW5wdXQgaWQ9Inphc29ieV9tYXhfbnJfJFFEYXRheyJpZCJ9IiB0eXBlPSJ0ZXh0IiByZWFkb25seT0icmVhZG9ubHkiIHZhbHVlPSIkUURhdGF7Inphc29ieW1heCJ9IiBuYW1lPSJ6YXNvYnlfbWF4X25yXyRRRGF0YXsiaWQifSIgc3R5bGU9IndpZHRoOiA1MHB4OyBoZWlnaHQ6IDEwcHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPjwvc3Bhbj48L2gyPg0KCQkJCQk8L2Rpdj4NCgkJCQkJPGRpdiBjbGFzcz0iQ29udGVudCI+DQoJCQkJCQk8dGFibGUgY2xhc3M9InRhYmxlc29ydGVyIERhdGFUYWJsZSIgaWQ9InRhYmVsYW9rcmVzdV8kUURhdGF7ImlkIn0iPg0KCQkJCQkJCTx0aGVhZD4NCgkJCQkJCQkJPHRyPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJUaWNrZXQgTnVtYmVyIn08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJUaXRsZSJ9PC90aD4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiU3RhdHVzIn08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJabGVjYWphY3kifTwvdGg+DQoJCQkJCQkJCQk8dGg+JFRleHR7Ik9kcG93aWVkemlhbG55In08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJQcmlvcnl0ZXQifTwvdGg+DQoJCQkJCQkJCQkNCgkJCQkJCQkJCTx0aD4kVGV4dHsiT2tyZXMgcmVhbGl6YWNqaSJ9PC90aD4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiWmFzb2J5In08L3RoPg0KCQkJCQkJCQk8L3RyPg0KCQkJCQkJCTwvdGhlYWQ+DQoJCQkJCQkJPHRib2R5IGlkPSdzb3J0YWJsZV8kUURhdGF7ImlkIn0nIG9rZXJzaWQ9JyRRRGF0YXsiaWQifSc+DQo8IS0tIGR0bDpibG9jazpPa3Jlc3lSZXN1bHRSb3cgLS0+DQoJCQkJCQkJCTx0ciBjbGFzcz0iTWFzdGVyQWN0aW9uIj4NCgkJCQkJCQkJCTx0ZD4NCgkJCQkJCQkJCQk8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPUFnZW50VGlja2V0Wm9vbTtUaWNrZXRJRD0kRGF0YXsiVGlja2V0SUQifSIgdGl0bGU9IiRRRGF0YXsiVGl0bGUifSIgY2xhc3M9IkFzQmxvY2sgTWFzdGVyQWN0aW9uTGluayI+JFFEYXRheyJUaWNrZXROdW1iZXIifTwvYT4NCgkJCQkJCQkJCTwvdGQ+DQoJCQkJCQkJCQk8dGQ+DQoJCQkJCQkJCQkJPGRpdiB0aXRsZT0iJFFEYXRheyJUaWNrZXRUaXRsZSJ9IiBzdHlsZT0nd2lkdGg6MzAwcHg7Jz4kUURhdGF7IlRpdGxlIiwiMTUwIn08L2Rpdj4NCgkJCQkJCQkJCTwvdGQ+DQoJCQkJCQkJCQk8dGQ+DQoJCQkJCQkJCQkJJFRleHR7IiRRRGF0YXsiU3RhdGUifSJ9DQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQkJPHRkPiRRRGF0YXsiQ3VzdG9tZXJOYW1lIn08L3RkPg0KCQkJCQkJCQkJPHRkPiRRRGF0YXsiUmVzcG9uc2libGVOYW1lIn08L3RkPg0KCQkJCQkJCQkJPHRkPg0KCQkJCQkJCQkJCSRRRGF0YXsiUHJpb3JpdHkifQ0KCQkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJCQ0KCQkJCQkJCQkJPHRkIGNsYXNzPSJva3Jlc3JlYWxpemFjamkiPg0KPCEtLSBkdGw6YmxvY2s6T2tyZXN5U2VsZWN0YSAtLT4NCgkJCQkJCQkJCQk8c2VsZWN0IGlkPSdjaGFuZ2Vfb2tyZXNfcmVhbGl6YWNqaV8kUURhdGF7ImlkIn1fJFFEYXRheyJUaWNrZXRJRCJ9JyBuYW1lPSdjaGFuZ2Vfb2tyZXNfcmVhbGl6YWNqaV8kUURhdGF7ImlkIn1fJFFEYXRheyJUaWNrZXRJRCJ9JyB0aWNrZXR6YXNvYnk9JyRRRGF0YXsiRHluYW1pY0ZpZWxkX1phc29ieSJ9JyB0aWNrZXRpZD0nJFFEYXRheyJUaWNrZXRJRCJ9JyBvbGR2YWw9JyRRRGF0YXsiaWQifSc+DQo8IS0tIGR0bDpibG9jazpPa3Jlc3lTZWxlY3RhUmVzdWx0Um93IC0tPg0KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSckUURhdGF7ImlkIn0nICRRRGF0YXsic2VsZWN0ZWQifSA+JFFEYXRheyJvZCJ9JFRleHR7IiAtICJ9JFFEYXRheyJkbyJ9PC9vcHRpb24+DQo8IS0tIGR0bDpibG9jazpPa3Jlc3lTZWxlY3RhUmVzdWx0Um93IC0tPgkJCQkJCQkJCQkNCgkJCQkJCQkJCQk8L3NlbGVjdD4NCjwhLS0gZHRsOmJsb2NrOk9rcmVzeVNlbGVjdGEgLS0+DQo8IS0tIGR0bDpibG9jazpPa3Jlc3lOb1NlbGVjdGEgLS0+DQoJCQkJCQkJCQkJJFFEYXRheyJvZCJ9JFRleHR7IiAtICJ9JFFEYXRheyJkbyJ9DQo8IS0tIGR0bDpibG9jazpPa3Jlc3lOb1NlbGVjdGEgLS0+DQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQkJPHRkIGNsYXNzPSJ6YXNvYnRpY2tldGEiPiRRRGF0YXsiemFzb2J5d29rcmVzaWUifS8kUURhdGF7IkR5bmFtaWNGaWVsZF9aYXNvYnkifTwvdGQ+DQoJCQkJCQkJCQk8dGQgc3R5bGU9J2Rpc3BsYXk6bm9uZTsnPjxpbnB1dCB0eXBlPSdoaWRkZW4nIGlkPSdrb2xlam5vc2NfJFFEYXRheyJpZCJ9XyRRRGF0YXsiVGlja2V0SUQifScgbmFtZT0na29sZWpub3NjXyRRRGF0YXsiaWQifV8kUURhdGF7IlRpY2tldElEIn0nIHZhbHVlPSckUURhdGF7InBvenljamEifScgIC8+DQoJCQkJCQkJCQk8aW5wdXQgdHlwZT0naGlkZGVuJyBpZD0nemFzb2J5XyRRRGF0YXsiaWQifV8kUURhdGF7IlRpY2tldElEIn0nIG5hbWU9J3phc29ieV8kUURhdGF7ImlkIn1fJFFEYXRheyJUaWNrZXRJRCJ9JyB2YWx1ZT0nJFFEYXRheyJEeW5hbWljRmllbGRfWmFzb2J5In0nICAvPg0KCQkJCQkJCQkJDQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQk8L3RyPg0KPCEtLSBkdGw6YmxvY2s6T2tyZXN5UmVzdWx0Um93IC0tPg0KPCEtLSBkdGw6YmxvY2s6T2tyZXN5Tm9EYXRhRm91bmRNc2cgLS0+DQoJCQkJCQkJCTx0cj4NCgkJCQkJCQkJCTx0ZCBjb2xzcGFuPSI4IiBjbGFzcz0ibm9kYXRhZm91bmQiPg0KCQkJCQkJCQkJCSRUZXh0eyJObyBkYXRhIGZvdW5kLiJ9DQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQk8L3RyPg0KPCEtLSBkdGw6YmxvY2s6T2tyZXN5Tm9EYXRhRm91bmRNc2cgLS0+CQkNCgkJCQkJCQk8L3Rib2R5Pg0KCQkJCQkJPC90YWJsZT4NCgkJCQkJPC9kaXY+DQoJCQkJPC9kaXY+DQo8IS0tIGR0bDpibG9jazpPa3Jlc3kgLS0+DQoJCQk8L2ZpZWxkc2V0Pg0KPCEtLSBkdGw6YmxvY2s6T2N6ZWt1amFjZSAtLT4JCQkNCgkJCQk8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KCQkJCQk8ZGl2IGNsYXNzPSJIZWFkZXIiPg0KCQkJCQkJPGgyPiRUZXh0eyJUaWNrZXR5IG5pZSBrb2xlamtvd2FuZSJ9PC9oMj4NCgkJCQkJPC9kaXY+DQoJCQkJCTxkaXYgY2xhc3M9IkNvbnRlbnQiPg0KCQkJCQkJPHRhYmxlIGNsYXNzPSJEYXRhVGFibGUiIGlkPSJ0YWJlbGFrb2xlamtvd2FuaWEiPg0KCQkJCQkJCTx0aGVhZD4NCgkJCQkJCQkJPHRyPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJUaWNrZXQgTnVtYmVyIn08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJUaXRsZSJ9PC90aD4NCgkJCQkJCQkJCTx0aD4kVGV4dHsiU3RhdHVzIn08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJabGVjYWphY3kifTwvdGg+DQoJCQkJCQkJCQk8dGg+JFRleHR7Ik9kcG93aWVkemlhbG55In08L3RoPg0KCQkJCQkJCQkJPHRoPiRUZXh0eyJQcmlvcnl0ZXQifTwvdGg+DQoJCQkJCQkJCQk8dGg+JFRleHR7Ilphc29ieSJ9PC90aD4NCgkJCQkJCQkJPC90cj4NCgkJCQkJCQk8L3RoZWFkPg0KCQkJCQkJCTx0Ym9keT4NCjwhLS0gZHRsOmJsb2NrOk9jemVrdWphY2VSZXN1bHRSb3cgLS0+DQoJCQkJCQkJCTx0cj4NCgkJCQkJCQkJCTx0ZD4NCgkJCQkJCQkJCQk8YSBocmVmPSIkRW52eyJCYXNlbGluayJ9QWN0aW9uPUFnZW50VGlja2V0Wm9vbTtUaWNrZXRJRD0kRGF0YXsiVGlja2V0SUQifSIgdGl0bGU9IiRRRGF0YXsiVGl0bGUifSIgY2xhc3M9IkFzQmxvY2sgTWFzdGVyQWN0aW9uTGluayI+JFFEYXRheyJUaWNrZXROdW1iZXIifTwvYT4NCgkJCQkJCQkJCTwvdGQ+DQoJCQkJCQkJCQk8dGQ+DQoJCQkJCQkJCQkJPGRpdiB0aXRsZT0iJFFEYXRheyJUaWNrZXRUaXRsZSJ9IiBzdHlsZT0nd2lkdGg6MzAwcHg7Jz4kUURhdGF7IlRpdGxlIiwiMTUwIn08L2Rpdj4NCgkJCQkJCQkJCTwvdGQ+DQoJCQkJCQkJCQk8dGQ+DQoJCQkJCQkJCQkJJFRleHR7IiRRRGF0YXsiU3RhdGUifSJ9DQoJCQkJCQkJCQk8L3RkPg0KCQkJCQkJCQkJPHRkPiRRRGF0YXsiQ3VzdG9tZXJOYW1lIn08L3RkPg0KCQkJCQkJCQkJPHRkPiRRRGF0YXsiUmVzcG9uc2libGVOYW1lIn08L3RkPg0KCQkJCQkJCQkJPHRkPg0KCQkJCQkJCQkJCSRRRGF0YXsiUHJpb3JpdHkifQ0KCQkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJCQ0KCQkJCQkJCQkJPHRkPiRRRGF0YXsiRHluYW1pY0ZpZWxkX1phc29ieSJ9PC90ZD4NCgkJCQkJCQkJPC90cj4NCjwhLS0gZHRsOmJsb2NrOk9jemVrdWphY2VSZXN1bHRSb3cgLS0+DQo8IS0tIGR0bDpibG9jazpPY3pla3VqYWNlTm9EYXRhRm91bmRNc2cgLS0+DQoJCQkJCQkJCTx0cj4NCgkJCQkJCQkJCTx0ZCBjb2xzcGFuPSI4Ij4NCgkJCQkJCQkJCQkkVGV4dHsiTm8gZGF0YSBmb3VuZC4ifQ0KCQkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJPC90cj4NCjwhLS0gZHRsOmJsb2NrOk9jemVrdWphY2VOb0RhdGFGb3VuZE1zZyAtLT4JCQ0KCQkJCQkJCTwvdGJvZHk+DQoJCQkJCQk8L3RhYmxlPg0KCQkJCQk8L2Rpdj4NCgkJCQk8L2Rpdj4NCjwhLS0gZHRsOmJsb2NrOk9jemVrdWphY2UgLS0+DQoJCQkNCgkJCTxidXR0b24gY2xhc3M9IlByaW1hcnkiIGlkPSJTdWJtaXQiIHR5cGU9InN1Ym1pdCIgdmFsdWU9IiRUZXh0eyJTdWJtaXQifSI+JFRleHR7IlphcGlzeiBrb2xlam5vc2MifTwvYnV0dG9uPg0KCQkJPC9mb3JtPgkNCgkJCTwvZGl2Pg0KCQk8L2Rpdj4NCgk8L2Rpdj4NCjwvZGl2Pg0KPGRpdiBpZD0iZGlhbG9nLWNvbmZpcm0iIHN0eWxlPSdkaXNwbGF5Om5vbmU7Jz4NCgk8cD48c3BhbiBjbGFzcz0idWktaWNvbiB1aS1pY29uLWFsZXJ0IiBzdHlsZT0iZmxvYXQ6bGVmdDsgbWFyZ2luOjAgN3B4IDIwcHggMDsiPjwvc3Bhbj4kVGV4dHsiQnJhayB3eXN0YXJjemFqYWNlaiBsaWN6YnkgZ29kemluIn08L3A+DQo8L2Rpdj4JDQo8IS0tIGR0bDpibG9jazpFZGl0UmVzdWx0T3ZlcnZpZXcgLS0+</File>
        <File Location="Kernel/Output/HTML/Standard/KolejkiZasoby.dtl" Permission="644" Encode="Base64">IyAtLQ0KIyBLb2xlamtpWmFzb2J5LmR0bCAtIHByb3ZpZGVzIEhUTUwgZm9ybSBmb3IgS29sZWpraVphc29ieQ0KIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxMiBPVFJTIEFHLCBodHRwOi8vb3Rycy5vcmcvDQojIC0tDQojICRJZDogS29sZWpraVphc29ieS5kdGwsdiAxLjI2IDIwMTIvMDEvMDkgMTQ6MDQ6MjkgbWcgRXhwICQNCiMgLS0NCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQ0KIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0Lg0KIyAtLQ0KDQo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4NCg0KPGRpdiBjbGFzcz0iTWFpbkJveCBBUklBUm9sZU1haW4gTGF5b3V0Rml4ZWRTaWRlYmFyIFNpZGViYXJGaXJzdCI+DQogICAgPGgxPiRUZXh0eyJQcnp5cGlzeiB6YXNvYnkifTwvaDE+DQogICAgPGRpdiBjbGFzcz0iQ29udGVudENvbHVtbiI+DQoJDQo8IS0tIGR0bDpibG9jazpPdmVydmlld0tvbXVuaWthdCAtLT4JDQoJPGRpdiBjbGFzcz0iV2lkZ2V0U2ltcGxlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPg0KCQkJCTxkaXYgc3R5bGU9ImJhY2tncm91bmQ6IHJlZDsgcGFkZGluZzogMTBweDsgZm9udC13ZWlnaHQ6IGJvbGQ7Ij4NCgkJCQkJPHA+DQoJCQkJCQkkVGV4dHsiVGEga29sZWprYSBuaWUgbWEgcHJ6eXBpc2FuZWdvIGthbGVuZGFyemEifQ0KCQkJCQk8L3A+DQoJCQkJPC9kaXY+DQoJCQkJPC9kaXY+DQoJPC9kaXY+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld0tvbXVuaWthdCAtLT4JDQoJDQo8IS0tIGR0bDpibG9jazpPdmVydmlld1Jlc3VsdCAtLT4NCiAgICAgICAgPGRpdiBjbGFzcz0iV2lkZ2V0U2ltcGxlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkhlYWRlciI+DQogICAgICAgICAgICAgICAgPGgyPiRUZXh0eyJMaXN0YSBrb2xlamVrIn08L2gyPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4NCiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9IkRhdGFUYWJsZSI+DQogICAgICAgICAgICAgICAgICAgIDx0aGVhZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+JFRleHR7Ik5hbWUifTwvdGg+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPg0KICAgICAgICAgICAgICAgICAgICA8dGJvZHk+DQo8IS0tIGR0bDpibG9jazpOb0RhdGFGb3VuZE1zZyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRUZXh0eyJObyBkYXRhIGZvdW5kLiJ9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQo8IS0tIGR0bDpibG9jazpOb0RhdGFGb3VuZE1zZyAtLT4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3UmVzdWx0Um93IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkFzQmxvY2siIGhyZWY9IiRFbnZ7IkJhc2VsaW5rIn1BY3Rpb249JEVudnsiQWN0aW9uIn07U3ViYWN0aW9uPUNoYW5nZTtRdWV1ZUlEPSRMUURhdGF7IlF1ZXVlSUQifSI+JFFEYXRheyJOYW1lIn08L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld1Jlc3VsdFJvdyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSZXN1bHQgLS0+DQoNCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3VXBkYXRlIC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4NCiAgICAgICAgICAgICAgICA8aDI+JFRleHR7IlVydWNob20gbW9kdWwgZGxhIGtvbGVqa2kifSAkUURhdGF7Ik5hbWUifTwvaDI+DQogICAgICAgICAgICA8L2Rpdj4NCgkJCSA8ZGl2IGNsYXNzPSJDb250ZW50Ij4NCgkJCSA8Zm9ybSBhY3Rpb249IiRFbnZ7IkNHSUhhbmRsZSJ9IiBtZXRob2Q9InBvc3QiIGNsYXNzPSJWYWxpZGF0ZSBQcmV2ZW50TXVsdGlwbGVTdWJtaXRzIj4NCgkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJBY3Rpb24iIHZhbHVlPSIkRW52eyJBY3Rpb24ifSIvPg0KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlN1YmFjdGlvbiIgdmFsdWU9IlJ1bk1vZHVsZSIvPg0KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlF1ZXVlSUQiIHZhbHVlPSIkUURhdGF7IlF1ZXVlSUQifSIvPg0KCQkJCTxmaWVsZHNldD4NCgkJCQkJPGxhYmVsIGZvcj0iRGF0YVN0YXJ0dSI+JFRleHR7IkR6aWVuIHBvY3phdGt1In08L2xhYmVsPg0KCQkJCQk8aW5wdXQgaWQ9ImRhdGFzdGFydHUiIHZhbHVlPSIiIG5hbWU9IkRhdGFTdGFydHUiIHR5cGU9InRleHQiIHRhYmluZGV4PSIxIiAvPg0KCQkJCTwvZmllbGRzZXQ+DQoJCQkJDQoJCQkJPGJ1dHRvbiBjbGFzcz0iUHJpbWFyeSIgaWQ9IlN1Ym1pdCIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iJFRleHR7IlN1Ym1pdCJ9Ij4kVGV4dHsiVXJ1Y2hvbSBtb2R1bCBuYSBrb2xlamNlIn08L2J1dHRvbj4NCgkJCSA8L2Zvcm0+DQoJCQkgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdVcGRhdGUgLS0+CQkJDQo8IS0tIGR0bDpibG9jazpPdmVydmlld0FkZCAtLT4NCiAgICAgICAgPGRpdiBjbGFzcz0iV2lkZ2V0U2ltcGxlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkhlYWRlciI+DQogICAgICAgICAgICAgICAgPGgyPiRUZXh0eyJPa3Jlc3kgZGxhIGtvbGVqa2kifSRRRGF0YXsiTmFtZSJ9PC9oMj4NCiAgICAgICAgICAgIDwvZGl2Pg0KCQkJIDxkaXYgY2xhc3M9IkNvbnRlbnQiPg0KCQkJIDxmb3JtIGFjdGlvbj0iJEVudnsiQ0dJSGFuZGxlIn0iIG1ldGhvZD0icG9zdCIgY2xhc3M9IlZhbGlkYXRlIFByZXZlbnRNdWx0aXBsZVN1Ym1pdHMiPg0KCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkFjdGlvbiIgdmFsdWU9IiRFbnZ7IkFjdGlvbiJ9Ii8+DQogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iU3ViYWN0aW9uIiB2YWx1ZT0iRG9kYWpPa3JlcyIvPg0KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlF1ZXVlSUQiIHZhbHVlPSIkUURhdGF7IlF1ZXVlSUQifSIvPg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdsTGljemJhT2tyZXNvdyAtLT4NCgkJCQk8aW5wdXQgaWQ9ImxpY3piYW9rcmVzb3ciIHR5cGU9ImhpZGRlbiIgbmFtZT0iTGljemJhT2tyZXNvdyIgdmFsdWU9IiRRRGF0YXsiTGN6aWJhT2tyZXNvdyJ9Ii8+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld2xMaWN6YmFPa3Jlc293IC0tPg0KCQkJCTxmaWVsZHNldD4NCgkJCQkJPHRhYmxlIGNsYXNzPSJEYXRhVGFibGUiIGlkPSJva3Jlc3l0YWJsZSI+DQoJCQkJCQk8dGhlYWQ+DQoJCQkJCQkJPHRyIGNsYXNzPSJzdWJuYWdsb3dlayI+DQoJCQkJCQkJCTx0aD4kVGV4dHsiUG9jemF0ZWsifTwvdGg+PHRoPiRUZXh0eyJLb25pZWMifTwvdGg+PHRoPiRUZXh0eyJEb3N0ZXBuZSB6YXNvYnkifTwvdGg+DQoJCQkJCQkJPC90cj4NCgkJCQkJCTwvdGhlYWQ+DQoJCQkJCQk8dGJvZHk+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld0N5a2xlUmVzdWx0Um93IC0tPg0KCQkJCQkJCTx0cj4NCgkJCQkJCQkJPHRkPg0KCQkJCQkJCQkJPGlucHV0IGlkPSJvZF9ucl8kUURhdGF7Im51bWVyIn0iIHR5cGU9InRleHQiIHZhbHVlPSIkUURhdGF7Im9kIn0iIHJlYWRvbmx5PSJyZWFkb25seSIgbmFtZT0ib2RfbnJfJFFEYXRheyJudW1lciJ9IiBhcmlhLWludmFsaWQ9ImZhbHNlIj4NCgkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJPHRkPg0KCQkJCQkJCQkJPGlucHV0IGlkPSJkb19ucl8kUURhdGF7Im51bWVyIn0iIHR5cGU9InRleHQiIHZhbHVlPSIkUURhdGF7ImRvIn0iIHJlYWRvbmx5PSJyZWFkb25seSIgbmFtZT0iZG9fbnJfJFFEYXRheyJudW1lciJ9IiBhcmlhLWludmFsaWQ9ImZhbHNlIj4NCgkJCQkJCQkJPC90ZD4NCgkJCQkJCQkJPHRkPg0KCQkJCQkJCQkJPGlucHV0IGlkPSJ6YXNvYnlfbWF4X25yXyRRRGF0YXsibnVtZXIifSIgdHlwZT0idGV4dCIgcmVhZG9ubHk9InJlYWRvbmx5IiB2YWx1ZT0iJFFEYXRheyJ6YXNvYnltYXgifSIgbmFtZT0iemFzb2J5X21heF9ucl8kUURhdGF7Im51bWVyIn0iIGFyaWEtaW52YWxpZD0iZmFsc2UiPiA8IS0tIGggLS0+DQoJCQkJCQkJCTwvdGQ+DQoJCQkJCQkJPC90cj4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3Q3lrbGVSZXN1bHRSb3cgLS0+DQoJCQkJCQk8L3Rib2R5Pg0KCQkJCQk8L3RhYmxlPg0KCQkJCTwvZmllbGRzZXQ+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld0J1dHRvbkRvZGFqIC0tPgkJCQ0KCQkJCTxidXR0b24gY2xhc3M9IlByaW1hcnkiIGlkPSJTdWJtaXQiIHR5cGU9InN1Ym1pdCIgdmFsdWU9IiRUZXh0eyJTdWJtaXQifSI+JFRleHR7IkRvZGFqIG9rcmVzIn08L2J1dHRvbj4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3QnV0dG9uRG9kYWogLS0+CQ0KCQkJIDwvZm9ybT4NCgkJCSA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQo8IS0tIGR0bDpibG9jazpPdmVydmlld0FkZCAtLT4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJDbGVhciI+PC9kaXY+DQo8L2Rpdj4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3IC0tPg0K</File>
        <File Location="Kernel/Output/HTML/Standard/AdminNavigationBarITRM.dtl" Permission="644" Encode="Base64">IyAtLQ0KIyBBZG1pbk5hdmlnYXRpb25CYXJJVFJNLmR0bCAtIHByb3ZpZGVzIGdsb2JhbCBIVE1MIE5hdmlnYXRpb25CYXINCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTAgT1RSUyBBRywgaHR0cDovL290cnMub3JnLw0KIyAtLQ0KIyAkSWQ6IEFkbWluTmF2aWdhdGlvbkJhcklUUk0uZHRsLHYgMS40NSAyMDEwLzA3LzE5IDIwOjE2OjE3IGR6IEV4cCAkDQojIC0tDQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlDQojIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UNCiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLnR4dC4NCiMgLS0NCjwhLS0gZHRsOmJsb2NrOkFkbWluTmF2QmFyIC0tPg0KPGRpdiBjbGFzcz0iTWFpbkJveCBBUklBUm9sZU1haW4gQWRtaW4iPg0KICAgIDxoMT4kVGV4dHsiSVRSTSJ9PC9oMT4NCiAgICA8ZGl2IGlkPSJSb3cxIiBjbGFzcz0iTGF5b3V0R3JpZCBDb2x1bW5zV2l0aFNwYWNpbmciPg0KICAgICAgICA8ZGl2IGNsYXNzPSJTaXplMW9mMyI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkhlYWRlciI+DQoJCQkJPGgyPiRUZXh0eyJPcGNqZSJ9PC9oMj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4NCiAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMYXlvdXRHcmlkIENvbHVtbnNXaXRoU3BhY2luZyI+DQo8IS0tIGR0bDpibG9jazpabWlhbnkgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9IlNpemUxb2YyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+PHNwYW4+JFRleHR7IiREYXRheyJOYW1lIn0ifTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkFzQmxvY2siIGhyZWY9IiRFbnZ7IkJhc2VsaW5rIn1BY3Rpb249JExRRGF0YXsiRnJvbnRlbmQ6Ok1vZHVsZSJ9Ij4kVGV4dHsiJERhdGF7Ik5hbWUifSJ9PC9hPjwvaDQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJGaWVsZEV4cGxhbmF0aW9uIj4kVGV4dHsiJERhdGF7IkRlc2NyaXB0aW9uIn0ifTwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KPCEtLSBkdGw6YmxvY2s6Wm1pYW55Q2xlYXIgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJDbGVhciI+PC9saT4NCjwhLS0gZHRsOmJsb2NrOlptaWFueUNsZWFyIC0tPg0KPCEtLSBkdGw6YmxvY2s6Wm1pYW55IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDbGVhciI+PC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KPCEtLSBkdGw6YmxvY2s6QWRtaW5OYXZCYXIgLS0+DQo=</File>
        <File Location="Kernel/Output/HTML/Standard/UzytkownicyKolejki.dtl" Permission="644" Encode="Base64">IyAtLQ0KIyBVenl0a293bmljeUtvbGVqa2kuZHRsIC0gcHJvdmlkZXMgSFRNTCBmb3JtIGZvciBVenl0a293bmljeUtvbGVqa2kNCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTIgT1RSUyBBRywgaHR0cDovL290cnMub3JnLw0KIyAtLQ0KIyAkSWQ6IFV6eXRrb3duaWN5S29sZWpraS5kdGwsdiAxLjI2IDIwMTIvMDEvMDkgMTQ6MDQ6MjkgbWcgRXhwICQNCiMgLS0NCiMgVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoQUdQTCkuIElmIHlvdQ0KIyBkaWQgbm90IHJlY2VpdmUgdGhpcyBmaWxlLCBzZWUgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwudHh0Lg0KIyAtLQ0KDQo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4NCg0KPGRpdiBjbGFzcz0iTWFpbkJveCBBUklBUm9sZU1haW4gTGF5b3V0Rml4ZWRTaWRlYmFyIFNpZGViYXJGaXJzdCI+DQogICAgPGgxPiRUZXh0eyJQcnp5cGlzeiBvc29ieSBkbyBrb2xlamVrIn08L2gxPg0KCQ0KICAgIDxkaXYgY2xhc3M9IkNvbnRlbnRDb2x1bW4iPg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSZXN1bHQgLS0+DQoJPGRpdiBjbGFzcz0iV2lkZ2V0U2ltcGxlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkhlYWRlciI+DQogICAgICAgICAgICAgICAgPGgyPiRUZXh0eyJMaXN0YSBvc29iIn08L2gyPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4NCgkJCTx0YWJsZSBjbGFzcz0iRGF0YVRhYmxlIiBpZD0iVXNlciI+DQoJCQkJPHRoZWFkPg0KCQkJCQk8dHI+DQoJCQkJCQk8dGg+JFRleHR7IlVzZXJuYW1lIn08L3RoPg0KCQkJCQk8L3RyPg0KCQkJCTwvdGhlYWQ+DQoJCQkJPHRib2R5Pg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSZXN1bHRSb3cgLS0+DQoJCQkJCTx0cj4NCgkJCQkJCTx0ZD4NCgkJCQkJCQk8YSBjbGFzcz0iQXNCbG9jayIgaHJlZj0iJEVudnsiQmFzZWxpbmsifUFjdGlvbj0kRW52eyJBY3Rpb24ifTtTdWJhY3Rpb249Q2hhbmdlO1VzZXJJRD0kTFFEYXRheyJVc2VySUQifSI+JFFEYXRheyJVc2VyTG9naW4ifSAoJFFEYXRheyJVc2VyRmlyc3RuYW1lIn0gJFFEYXRheyJVc2VyTGFzdG5hbWUifSk8L2E+DQoJCQkJCQk8L3RkPg0KCQkJCQk8L3RyPg0KPCEtLSBkdGw6YmxvY2s6T3ZlcnZpZXdSZXN1bHRSb3cgLS0+DQo8IS0tIGR0bDpibG9jazpOb0RhdGFGb3VuZE1zZyAtLT4NCgkJCQkJPHRyPg0KCQkJCQkJPHRkPg0KCQkJCQkJCSRUZXh0eyJObyBkYXRhIGZvdW5kLiJ9DQoJCQkJCQk8L3RkPg0KCQkJCQk8L3RyPg0KPCEtLSBkdGw6YmxvY2s6Tm9EYXRhRm91bmRNc2cgLS0+DQoJCQkJPC90Ym9keT4NCiAgICAgICAgICAgIDwvdGFibGU+DQoJCTwvZGl2Pg0KCQk8L2Rpdj4NCjwhLS0gZHRsOmJsb2NrOk92ZXJ2aWV3UmVzdWx0IC0tPg0KPCEtLSBkdGw6YmxvY2s6VXNlck92ZXJ2aWV3UmVzdWx0IC0tPg0KCQk8ZGl2IGNsYXNzPSJXaWRnZXRTaW1wbGUiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyIj4NCiAgICAgICAgICAgICAgICA8aDI+JFRleHR7IlByb2NlbnRvd3kgdWR6aWFsIn0gJFFEYXRheyJVc2VyTG9naW4ifSAkVGV4dHsidyBrb2xlamthY2gifTwvaDI+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPg0KPCEtLSBkdGw6YmxvY2s6VXNlck92ZXJ2aWV3Rm9ybSAtLT4JCQ0KCQkJPGZvcm0gYWN0aW9uPSIkRW52eyJDR0lIYW5kbGUifSIgbWV0aG9kPSJwb3N0IiBjbGFzcz0iVmFsaWRhdGUgUHJldmVudE11bHRpcGxlU3VibWl0cyI+DQoJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQWN0aW9uIiB2YWx1ZT0iJEVudnsiQWN0aW9uIn0iLz4NCiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJTdWJhY3Rpb24iIHZhbHVlPSJTYXZlIi8+DQogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iVXNlcklEIiB2YWx1ZT0iJFFEYXRheyJVc2VySUQifSIvPg0KCQkJCTxmaWVsZHNldD4NCgkJCQk8dGFibGUgaWQ9IlVzZXJPdmVydmlld1Jlc3VsdFRhYmxlIj4NCgkJCQkJPCEtLTx0aGVhZD4NCgkJCQkJCTx0cj4NCgkJCQkJCQk8dGg+JFRleHR7Ik5hbWUifTwvdGg+DQoJCQkJCQk8L3RyPg0KCQkJCQk8L3RoZWFkPg0KCQkJCQk8dGJvZHk+LS0+DQoJCQkJCTx0cj4NCgkJCQkJCTx0ZD4NCgkJCQkJCQkJDQoJCQkJCQk8L3RkPg0KCQkJCQkJPHRkPg0KCQkJCQkJCTxpbnB1dCBpZD0ib2dvbGVtIiB2YWx1ZT0iJFFEYXRheyJTdW1hWmFzb2JvdyJ9IiBzaXplPSIyIiBuYW1lPSJvZ29sZW0iIHJlYWRvbmx5PSJyZWFkb25seSIgdHlwZT0idGV4dCIgdGFiaW5kZXg9IjEiIC8+ICUNCgkJCQkJCTwvdGQ+DQoJCQkJCTwvdHI+DQo8IS0tIGR0bDpibG9jazpVc2VyT3ZlcnZpZXdSZXN1bHRSb3cgLS0+DQoJCQkJCQk8dHI+DQoJCQkJCQkJPHRkPg0KCQkJCQkJCQkkUURhdGF7Ik5hbWUifQ0KCQkJCQkJCTwvdGQ+DQoJCQkJCQkJPHRkPg0KCQkJCQkJCQk8aW5wdXQgaWQ9InByb2NlbnR5XyRRRGF0YXsiUXVldWVJRCJ9IiB2YWx1ZT0iJFFEYXRheyJQcnp5ZHppZWxvbmVaYXNvYnkifSIgc2l6ZT0iMiIgbmFtZT0icHJvY2VudHlfJFFEYXRheyJRdWV1ZUlEIn0iIHR5cGU9InRleHQiIHRhYmluZGV4PSIxIiAvPiAlDQoJCQkJCQkJPC90ZD4NCgkJCQkJCTwvdHI+DQo8IS0tIGR0bDpibG9jazpVc2VyT3ZlcnZpZXdSZXN1bHRSb3cgLS0+DQoJCQkJCTwvdGJvZHk+DQogICAgICAgICAgICAgICAgPC90YWJsZT4NCgkJCTwvZmllbGRzZXQ+DQoJCQkJDQoJCQkJPGJ1dHRvbiBjbGFzcz0iUHJpbWFyeSIgaWQ9IlN1Ym1pdCIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iJFRleHR7IlN1Ym1pdCJ9Ij4kVGV4dHsiWmFwaXN6In08L2J1dHRvbj4NCgkJCSA8L2Zvcm0+DQo8IS0tIGR0bDpibG9jazpVc2VyT3ZlcnZpZXdGb3JtIC0tPg0KPCEtLSBkdGw6YmxvY2s6VXNlck92ZXJ2aWV3Tm9EYXRhRm91bmRNc2cgLS0+DQoJCQk8dGFibGU+DQoJCQkJPHRyPg0KCQkJCQk8dGQ+DQoJCQkJCQkkVGV4dHsiTm8gZGF0YSBmb3VuZC4ifQ0KCQkJCQk8L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPg0KPCEtLSBkdGw6YmxvY2s6VXNlck92ZXJ2aWV3Tm9EYXRhRm91bmRNc2cgLS0+DQoJCQk8L2Rpdj4NCgkJPC9kaXY+DQo8IS0tIGR0bDpibG9jazpVc2VyT3ZlcnZpZXdSZXN1bHQgLS0+DQoJPC9kaXY+DQogICAgPGRpdiBjbGFzcz0iQ2xlYXIiPjwvZGl2Pg0KPC9kaXY+DQo8IS0tIGR0bDpibG9jazpPdmVydmlldyAtLT4NCg==</File>
        <File Location="var/httpd/htdocs/skins/Agent/default/css/thirdparty/itrm.css" Permission="644" Encode="Base64">I1VzZXJPdmVydmlld1Jlc3VsdFRhYmxlIHRkIHsKCXBhZGRpbmc6IDVweDsKfQoKI29rcmVzeXRhYmxlIHRoIHsKCXRleHQtYWxpZ246IGNlbnRlcjsKfQoKI29rcmVzeXRhYmxlIHRkIHsKCXRleHQtYWxpZ246IGNlbnRlcjsKCXBhZGRpbmc6IDJweDsKfQoKI3RhYmVsYWtvbGVqa293YW5pYSB0ZCB7CglwYWRkaW5nOiAzcHg7Cn0KCiN0YWJlbGFrb2xlamtvd2FuaWEgdGQua29udGVuZXJha2NqaSB7Cgl3aWR0aDogMTYwcHg7Cgl0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCiN0YWJlbGFrb2xlamtvd2FuaWFzZWMgLnphc29idGlja2V0YSB7Cgl3aWR0aDogNjBweDsKCXRleHQtYWxpZ246IGNlbnRlcjsKfQoKI3RhYmVsYWtvbGVqa293YW5pYXNlYyAub2tyZXNyZWFsaXphY2ppIHsKCXdpZHRoOiAxODBweDsKCXRleHQtYWxpZ246IGNlbnRlcjsKfQoKI3RhYmVsYWtvbGVqa293YW5pYXNlYyB0ZCB7CglwYWRkaW5nOiAzcHg7Cn0KCiN0YWJlbGFha3R1YWxuaWUgdGQucHJ6ZXRlcm1pbm93YW55IHsKCWJhY2tncm91bmQ6ICNGMDM0MzI7Cn0=</File>
        <File Location="var/httpd/htdocs/js/thirdparty/itrm/UzytkownicyDoKolejki.js" Permission="644" Encode="Base64">77u/Ly8gLS0NCi8vIFV6eXRrb3duaWN5RG9Lb2xlamtpLmpzIC0gcHJvdmlkZXMgZnVuY3Rpb25zIGZvciBhbGwgdGlja2V0IGFjdGlvbiBwb3B1cHMNCi8vIENvcHlyaWdodCAoQykgMjAwMS0yMDEyIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8NCi8vIC0tDQovLyAkSWQ6IFV6eXRrb3duaWN5RG9Lb2xlamtpLmpzLHYgMS4xMyAyMDEyLzAxLzIzIDExOjM4OjMzIG1nIEV4cCAkDQovLyAtLQ0KLy8gVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCi8vIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UNCi8vIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuDQovLyAtLQ0KDQoidXNlIHN0cmljdCI7DQp2YXIgc3VtYV9wcm9jZW50b3c9MDsNCiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgew0KCSQoJ2lucHV0W2lkXj0icHJvY2VudHlfIl0nKS5rZXl1cChmdW5jdGlvbigpew0KCQlzdW1hX3Byb2NlbnRvdyA9MDsNCgkJJCgnaW5wdXRbaWRePSJwcm9jZW50eV8iXScpLmVhY2goZnVuY3Rpb24oKXsNCgkJCXZhciBjdXJfbGljemJhID0gcGFyc2VGbG9hdCgkKHRoaXMpLmF0dHIoJ3ZhbHVlJykpOw0KCQkJaWYoIWlzTmFOKGN1cl9saWN6YmEpKSB7DQoJCQkJc3VtYV9wcm9jZW50b3cgKz0gY3VyX2xpY3piYTsNCgkJCX0NCgkJfSk7DQoJCQ0KCQlpZihzdW1hX3Byb2NlbnRvdyA+IDEwMCkgew0KCQkJYWxlcnQoJ1ByemVrcm9jem9ubyBwcm9jZW50b3fEhSBwdWzEmSBvZ8OzbG7EhScpOw0KCQkJJCh0aGlzKS5hdHRyKCd2YWx1ZScsJycpOw0KCQl9DQoJCQ0KCQlzdW1hX3Byb2NlbnRvdyAgPSAwOw0KCQkkKCdpbnB1dFtpZF49InByb2NlbnR5XyJdJykuZWFjaChmdW5jdGlvbigpew0KCQkJdmFyIGN1cl9saWN6YmEgPSBwYXJzZUZsb2F0KCQodGhpcykuYXR0cigndmFsdWUnKSk7DQoJCQlpZighaXNOYU4oY3VyX2xpY3piYSkpIHsNCgkJCQlzdW1hX3Byb2NlbnRvdyArPSBjdXJfbGljemJhOw0KCQkJfQ0KCQl9KTsNCgkJJCgnI29nb2xlbScpLmF0dHIoJ3ZhbHVlJyxwYXJzZUZsb2F0KCcxMDAnKS1wYXJzZUZsb2F0KHN1bWFfcHJvY2VudG93KSk7DQoJfSk7DQp9KTs=</File>
        <File Location="var/httpd/htdocs/js/thirdparty/itrm/KolejkowanieTicketow.js" Permission="644" Encode="Base64">77u/Ly8gLS0NCi8vIEtvbGVqa293YW5pZVRpY2tldG93LmpzIC0gcHJvdmlkZXMgZnVuY3Rpb25zIGZvciBhbGwgdGlja2V0IGFjdGlvbiBwb3B1cHMNCi8vIENvcHlyaWdodCAoQykgMjAwMS0yMDEyIE9UUlMgQUcsIGh0dHA6Ly9vdHJzLm9yZy8NCi8vIC0tDQovLyAkSWQ6IEtvbGVqa293YW5pZVRpY2tldG93LmpzLHYgMS4xMyAyMDEyLzAxLzIzIDExOjM4OjMzIG1nIEV4cCAkDQovLyAtLQ0KLy8gVGhpcyBzb2Z0d2FyZSBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFkuIEZvciBkZXRhaWxzLCBzZWUNCi8vIHRoZSBlbmNsb3NlZCBmaWxlIENPUFlJTkcgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24gKEFHUEwpLiBJZiB5b3UNCi8vIGRpZCBub3QgcmVjZWl2ZSB0aGlzIGZpbGUsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC50eHQuDQovLyAtLQ0KDQoidXNlIHN0cmljdCI7DQp2YXIgc3RhcnQgPSAxOw0KdmFyIHN1bWFfZ29kemluX29rcmVzdTsNCihmdW5jdGlvbigkKSB7DQoJJCggJ3Rib2R5W2lkXj0ic29ydGFibGVfIl0nICkuc29ydGFibGUoew0KCQlzdG9wOiBmdW5jdGlvbigpew0KCQkJdmFyIG9rZXJzX2lkID0gJCh0aGlzKS5hdHRyKCdva2Vyc2lkJyk7DQoJCQl2YXIga29sZWpub3NjX29nb2xuYSA9IDE7DQoJCQkkKCdpbnB1dFtpZF49ImtvbGVqbm9zY18nK29rZXJzX2lkKyciXScpLmVhY2goZnVuY3Rpb24oKXsNCgkJCQkkKHRoaXMpLmF0dHIoJ3ZhbHVlJyxrb2xlam5vc2Nfb2dvbG5hKTsNCgkJCQlrb2xlam5vc2Nfb2dvbG5hKys7DQoJCQl9KTsNCgkJCQ0KCQl9LA0KCX0pOwkNCgkNCgkkKCdzZWxlY3RbaWRePSJjaGFuZ2Vfb2tyZXNfcmVhbGl6YWNqaV8iXScpLmxpdmUoJ2NoYW5nZScsZnVuY3Rpb24oKXsNCgkJdmFyIHNlbGVjdGVkX29wdGlvbiA9ICQodGhpcykuY2hpbGRyZW4oJ29wdGlvbjpzZWxlY3RlZCcpLmF0dHIoJ3ZhbHVlJyk7DQoJCXZhciBuYXp3YV9zZWxla3RhID0gJCh0aGlzKS5hdHRyKCdpZCcpOw0KCQl2YXIgdGlja2V0X3phc29ieSA9IHBhcnNlSW50KCQodGhpcykuYXR0cigndGlja2V0emFzb2J5JykpOw0KCQl2YXIgb2xkX29wdGlvbiA9IHBhcnNlSW50KCQodGhpcykuYXR0cignb2xkdmFsJykpOw0KCQl2YXIgdGlja2V0aWQgPSBwYXJzZUludCgkKHRoaXMpLmF0dHIoJ3RpY2tldGlkJykpOw0KCQl2YXIgcHVsYV9vZ29sbmEgPSBwYXJzZUludCgkKCcjemFzb2J5X21heF9ucl8nK3NlbGVjdGVkX29wdGlvbisnJykuYXR0cigndmFsdWUnKSk7DQoJCQ0KCQlzdW1hX2dvZHppbl9va3Jlc3UgPSAwOw0KCQkkKCdpbnB1dFtpZF49Inphc29ieV8nK3NlbGVjdGVkX29wdGlvbisnXyJdJykuZWFjaChmdW5jdGlvbigpew0KCQkJdmFyIGN1cl9saWN6YmEgPSBwYXJzZUZsb2F0KCQodGhpcykuYXR0cigndmFsdWUnKSk7DQoJCQlpZighaXNOYU4oY3VyX2xpY3piYSkpIHsNCgkJCQlzdW1hX2dvZHppbl9va3Jlc3UgKz0gY3VyX2xpY3piYTsNCgkJCX0NCgkJfSk7DQoJCWlmKChwdWxhX29nb2xuYSAtIHN1bWFfZ29kemluX29rcmVzdSkgPCB0aWNrZXRfemFzb2J5KSB7DQoJCQkkKHRoaXMpLmF0dHIoJ3ZhbHVlJyxvbGRfb3B0aW9uKTsNCgkJCSQoICIjZGlhbG9nLWNvbmZpcm0iICkuZGlhbG9nKHsNCgkJCQlyZXNpemFibGU6IGZhbHNlLA0KCQkJCW1vZGFsOiB0cnVlLA0KCQkJCXdpZHRoOiA2MDAsDQoJCQkJdGl0bGU6ICcnLA0KCQkJCWJ1dHRvbnM6IHsNCgkJCQkJIk9LIjogZnVuY3Rpb24oKSB7DQoJCQkJCQkkKCB0aGlzICkuZGlhbG9nKCAiY2xvc2UiICk7DQoJCQkJCX0sCQkJCQkNCgkJCQl9DQoJCQl9KTsNCgkJfSBlbHNlIHsNCgkJCSQodGhpcykuYXR0cignb2xkdmFsJyxzZWxlY3RlZF9vcHRpb24pOw0KCQkJJCh0aGlzKS5jaGlsZHJlbigpLnJlbW92ZUF0dHIoJ3NlbGVjdGVkJyk7DQoJCQkkKCcjJytuYXp3YV9zZWxla3RhKycgb3B0aW9uW3ZhbHVlPSInK3NlbGVjdGVkX29wdGlvbisnIl0nKS5hdHRyKCdzZWxlY3RlZCcsJ3NlbGVjdGVkJyk7DQoJCQkkKCcjc29ydGFibGVfJytzZWxlY3RlZF9vcHRpb24pLmFwcGVuZCgnPHRyPicrJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5jaGlsZHJlbigpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsJ2dyZWVuJykucGFyZW50KCkuaHRtbCgpKyc8L3RyPicpOw0KCQkJJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5yZW1vdmUoKTsNCgkJCSQoJyNzb3J0YWJsZV8nK3NlbGVjdGVkX29wdGlvbikuZmluZCgndGQubm9kYXRhZm91bmQnKS5wYXJlbnQoKS5yZW1vdmUoKTsNCgkJfQ0KCQkNCgl9KTsNCn0pKGpRdWVyeSk7</File>
        <File Location="var/httpd/htdocs/js/thirdparty/itrm/jquery-ui-1.8.16/ui/jquery.ui.dialog.js" Permission="644" Encode="Base64"></File>
        <File Location="var/httpd/htdocs/js/thirdparty/itrm/jquery-ui-1.8.16/ui/jquery.ui.sortable.js" Permission="644" Encode="Base64"></File>
    </Filelist>
    <DatabaseInstall>
        <TableCreate Type="post" Name="itrm_cykl">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="INTEGER"></Column>
            <Column Name="nazwa" Required="false" Size="250" Type="VARCHAR"></Column>
            <Column Name="liczba_okresow" Required="false" Type="INTEGER"></Column>
            <Column Name="dzien_poczatku" Required="false" Type="INTEGER"></Column>
        </TableCreate>
        <TableCreate Type="post" Name="itrm_kolejka_cykl">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="INTEGER"></Column>
            <Column Name="cykl" Required="false" Type="INTEGER"></Column>
            <Column Name="okres" Required="false" Type="INTEGER"></Column>
            <Column Name="kolejka" Required="false" Type="INTEGER"></Column>
            <Column Name="zasoby" Required="false" Type="INTEGER"></Column>
            <Column Name="zasoby_max" Required="false" Type="INTEGER"></Column>
            <ForeignKey ForeignTable="itrm_cykl">
                <Reference Foreign="id" Local="cykl">
                </Reference>
            </ForeignKey>
            <ForeignKey ForeignTable="itrm_okres">
                <Reference Foreign="id" Local="okres">
                </Reference>
            </ForeignKey>
        </TableCreate>
        <TableCreate Type="post" Name="itrm_uzytkownik_kolejka">
            <Column Name="osoba" Required="true" Type="INTEGER"></Column>
            <Column Name="kolejka" Required="true" Type="INTEGER"></Column>
            <Column Name="okres" Required="false" Type="INTEGER"></Column>
            <Column Name="zasoby" Required="true" Type="INTEGER"></Column>
        </TableCreate>
        <TableCreate Type="post" Name="itrm_ticket_okres">
            <Column AutoIncrement="true" Name="id" PrimaryKey="true" Required="true" Type="INTEGER"></Column>
            <Column Name="ticket" Required="true" Type="INTEGER"></Column>
            <Column Name="kolejka" Required="true" Type="INTEGER"></Column>
            <Column Name="okres_rozpoczecia" Required="false" Type="INTEGER"></Column>
            <Column Name="okres_zakonczenia" Required="false" Type="INTEGER"></Column>
            <Column Name="okres" Required="false" Type="INTEGER"></Column>
            <Column Name="pozycja" Required="false" Type="INTEGER"></Column>
            <Column Name="zasoby_w_okresie" Required="false" Type="INTEGER"></Column>
            <ForeignKey ForeignTable="itrm_okres">
                <Reference Foreign="id" Local="okres_rozpoczecia">
                </Reference>
            </ForeignKey>
            <ForeignKey ForeignTable="itrm_okres">
                <Reference Foreign="id" Local="okres_zakonczenia">
                </Reference>
            </ForeignKey>
        </TableCreate>
    </DatabaseInstall>
    <DatabaseUninstall>
        <TableDrop Type="post" Name="itrm_ticket_okres">
        </TableDrop>
        <TableDrop Type="post" Name="itrm_uzytkownik_kolejka">
        </TableDrop>
        <TableDrop Type="post" Name="itrm_kolejka_cykl">
        </TableDrop>
        <TableDrop Type="post" Name="itrm_okres">
        </TableDrop>
        <TableDrop Type="post" Name="itrm_cykl">
        </TableDrop>
    </DatabaseUninstall>
</otrs_package>